Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `data_selector.ys' --

1. Executing Liberty frontend.
Imported 32 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `data_selector.v' to AST representation.
Generating RTLIL representation for module `\input_selector'.
Generating RTLIL representation for module `\input_selector_block'.
Generating RTLIL representation for module `\adapter_4_to_1'.
Generating RTLIL representation for module `\scheduler'.
Generating RTLIL representation for module `\scheduler_block'.
Generating RTLIL representation for module `\data_selector'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     \scheduler_block
Used module:         \scheduler
Used module:         \adapter_4_to_1
Used module:     \input_selector_block
Used module:         \input_selector

3.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Generating RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.6. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.7. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.8. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.9. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.10. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.11. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.12. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.13. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.14. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.15. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.16. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.17. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.18. Executing AST frontend in derive mode using pre-parsed AST for module `\scheduler_block'.
Parameter 1 (\DATA_WIDTH) = 16
Parameter 2 (\N_INPUTS) = 4
Generating RTLIL representation for module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.

3.1.19. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector_block'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Parameter 4 (\OUTPUTS) = 4
Parameter 5 (\OUTPUTS_PER_BUS) = 4
Generating RTLIL representation for module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.

3.1.20. Executing AST frontend in derive mode using pre-parsed AST for module `\scheduler'.
Parameter 1 (\DATA_WIDTH) = 16
Parameter 2 (\N_INPUTS) = 4
Generating RTLIL representation for module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.

3.1.21. Executing AST frontend in derive mode using pre-parsed AST for module `\adapter_4_to_1'.
Parameter 1 (\DATA_WIDTH) = 16
Parameter 2 (\N_INPUTS) = 4
Generating RTLIL representation for module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.

3.1.22. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4
Used module:         \scheduler
Used module:         \adapter_4_to_1
Used module:     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block
Used module:         \input_selector

3.1.23. Executing AST frontend in derive mode using pre-parsed AST for module `\scheduler'.
Parameter 1 (\DATA_WIDTH) = 16
Parameter 2 (\N_INPUTS) = 4
Found cached RTLIL representation for module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.

3.1.24. Executing AST frontend in derive mode using pre-parsed AST for module `\adapter_4_to_1'.
Parameter 1 (\DATA_WIDTH) = 16
Parameter 2 (\N_INPUTS) = 4
Found cached RTLIL representation for module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.

3.1.25. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.26. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.27. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.28. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.29. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.30. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.31. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.32. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.33. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.34. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.35. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.36. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.37. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.38. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.39. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.40. Executing AST frontend in derive mode using pre-parsed AST for module `\input_selector'.
Parameter 1 (\DATA_WIDTH) = 4
Parameter 2 (\MAIN_INPUTS) = 16
Parameter 3 (\REGS_INPUTS) = 64
Found cached RTLIL representation for module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.

3.1.41. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4
Used module:     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block
Used module:         $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64

3.1.42. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4
Used module:     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block
Used module:         $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64
Removing unused module `\scheduler_block'.
Removing unused module `\scheduler'.
Removing unused module `\adapter_4_to_1'.
Removing unused module `\input_selector_block'.
Removing unused module `\input_selector'.
Removed 5 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$scheduler.v:60$206 in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
Removed 1 dead cases from process $proc$input_selector.v:30$196 in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Removed 1 dead cases from process $proc$input_selector.v:30$193 in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Removed a total of 3 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\data_selector.$proc$data_selector.v:28$107'.
     1/2: $0\data_out[15:0]
     2/2: $0\wRegs[255:0]
Creating decoders for process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
     1/4: $0\r[3][15:0]
     2/4: $0\r[2][15:0]
     3/4: $0\r[1][15:0]
     4/4: $0\r[0][15:0]
Creating decoders for process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
     1/7: $2$mem2reg_rd$\r$scheduler.v:71$205_DATA[15:0]$212
     2/7: $1$mem2reg_rd$\r$scheduler.v:71$205_ADDR[1:0]$210
     3/7: $1$mem2reg_rd$\r$scheduler.v:71$205_DATA[15:0]$209
     4/7: $0$mem2reg_rd$\r$scheduler.v:71$205_ADDR[1:0]$208
     5/7: $0$mem2reg_rd$\r$scheduler.v:71$205_DATA[15:0]$207
     6/7: $0\ctr[1:0]
     7/7: $0\data_out[15:0]
Creating decoders for process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
     1/48: $0\wSelecRegs[15][5:0]
     2/48: $0\wSelecMain[15][3:0]
     3/48: $0\wSelecOrigin[15][0:0]
     4/48: $0\wSelecRegs[14][5:0]
     5/48: $0\wSelecMain[14][3:0]
     6/48: $0\wSelecOrigin[14][0:0]
     7/48: $0\wSelecRegs[13][5:0]
     8/48: $0\wSelecMain[13][3:0]
     9/48: $0\wSelecOrigin[13][0:0]
    10/48: $0\wSelecRegs[12][5:0]
    11/48: $0\wSelecMain[12][3:0]
    12/48: $0\wSelecOrigin[12][0:0]
    13/48: $0\wSelecRegs[11][5:0]
    14/48: $0\wSelecMain[11][3:0]
    15/48: $0\wSelecOrigin[11][0:0]
    16/48: $0\wSelecRegs[10][5:0]
    17/48: $0\wSelecMain[10][3:0]
    18/48: $0\wSelecOrigin[10][0:0]
    19/48: $0\wSelecRegs[9][5:0]
    20/48: $0\wSelecMain[9][3:0]
    21/48: $0\wSelecOrigin[9][0:0]
    22/48: $0\wSelecRegs[8][5:0]
    23/48: $0\wSelecMain[8][3:0]
    24/48: $0\wSelecOrigin[8][0:0]
    25/48: $0\wSelecRegs[7][5:0]
    26/48: $0\wSelecMain[7][3:0]
    27/48: $0\wSelecOrigin[7][0:0]
    28/48: $0\wSelecRegs[6][5:0]
    29/48: $0\wSelecMain[6][3:0]
    30/48: $0\wSelecOrigin[6][0:0]
    31/48: $0\wSelecRegs[5][5:0]
    32/48: $0\wSelecMain[5][3:0]
    33/48: $0\wSelecOrigin[5][0:0]
    34/48: $0\wSelecRegs[4][5:0]
    35/48: $0\wSelecMain[4][3:0]
    36/48: $0\wSelecOrigin[4][0:0]
    37/48: $0\wSelecRegs[3][5:0]
    38/48: $0\wSelecMain[3][3:0]
    39/48: $0\wSelecOrigin[3][0:0]
    40/48: $0\wSelecRegs[2][5:0]
    41/48: $0\wSelecMain[2][3:0]
    42/48: $0\wSelecOrigin[2][0:0]
    43/48: $0\wSelecRegs[1][5:0]
    44/48: $0\wSelecMain[1][3:0]
    45/48: $0\wSelecOrigin[1][0:0]
    46/48: $0\wSelecRegs[0][5:0]
    47/48: $0\wSelecMain[0][3:0]
    48/48: $0\wSelecOrigin[0][0:0]
Creating decoders for process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
     1/80: $0\chunksRegs[63][3:0]
     2/80: $0\chunksRegs[62][3:0]
     3/80: $0\chunksRegs[61][3:0]
     4/80: $0\chunksRegs[60][3:0]
     5/80: $0\chunksRegs[59][3:0]
     6/80: $0\chunksRegs[58][3:0]
     7/80: $0\chunksRegs[57][3:0]
     8/80: $0\chunksRegs[56][3:0]
     9/80: $0\chunksRegs[55][3:0]
    10/80: $0\chunksRegs[54][3:0]
    11/80: $0\chunksRegs[53][3:0]
    12/80: $0\chunksRegs[52][3:0]
    13/80: $0\chunksRegs[51][3:0]
    14/80: $0\chunksRegs[50][3:0]
    15/80: $0\chunksRegs[49][3:0]
    16/80: $0\chunksRegs[48][3:0]
    17/80: $0\chunksRegs[47][3:0]
    18/80: $0\chunksRegs[46][3:0]
    19/80: $0\chunksRegs[45][3:0]
    20/80: $0\chunksRegs[44][3:0]
    21/80: $0\chunksRegs[43][3:0]
    22/80: $0\chunksRegs[42][3:0]
    23/80: $0\chunksRegs[41][3:0]
    24/80: $0\chunksRegs[40][3:0]
    25/80: $0\chunksRegs[39][3:0]
    26/80: $0\chunksRegs[38][3:0]
    27/80: $0\chunksRegs[37][3:0]
    28/80: $0\chunksRegs[36][3:0]
    29/80: $0\chunksRegs[35][3:0]
    30/80: $0\chunksRegs[34][3:0]
    31/80: $0\chunksRegs[33][3:0]
    32/80: $0\chunksRegs[32][3:0]
    33/80: $0\chunksRegs[31][3:0]
    34/80: $0\chunksRegs[30][3:0]
    35/80: $0\chunksRegs[29][3:0]
    36/80: $0\chunksRegs[28][3:0]
    37/80: $0\chunksRegs[27][3:0]
    38/80: $0\chunksRegs[26][3:0]
    39/80: $0\chunksRegs[25][3:0]
    40/80: $0\chunksRegs[24][3:0]
    41/80: $0\chunksRegs[23][3:0]
    42/80: $0\chunksRegs[22][3:0]
    43/80: $0\chunksRegs[21][3:0]
    44/80: $0\chunksRegs[20][3:0]
    45/80: $0\chunksRegs[19][3:0]
    46/80: $0\chunksRegs[18][3:0]
    47/80: $0\chunksRegs[17][3:0]
    48/80: $0\chunksRegs[16][3:0]
    49/80: $0\chunksRegs[15][3:0]
    50/80: $0\chunksRegs[14][3:0]
    51/80: $0\chunksRegs[13][3:0]
    52/80: $0\chunksRegs[12][3:0]
    53/80: $0\chunksRegs[11][3:0]
    54/80: $0\chunksRegs[10][3:0]
    55/80: $0\chunksRegs[9][3:0]
    56/80: $0\chunksRegs[8][3:0]
    57/80: $0\chunksRegs[7][3:0]
    58/80: $0\chunksRegs[6][3:0]
    59/80: $0\chunksRegs[5][3:0]
    60/80: $0\chunksRegs[4][3:0]
    61/80: $0\chunksRegs[3][3:0]
    62/80: $0\chunksRegs[2][3:0]
    63/80: $0\chunksRegs[1][3:0]
    64/80: $0\chunksRegs[0][3:0]
    65/80: $0\chunksMain[15][3:0]
    66/80: $0\chunksMain[14][3:0]
    67/80: $0\chunksMain[13][3:0]
    68/80: $0\chunksMain[12][3:0]
    69/80: $0\chunksMain[11][3:0]
    70/80: $0\chunksMain[10][3:0]
    71/80: $0\chunksMain[9][3:0]
    72/80: $0\chunksMain[8][3:0]
    73/80: $0\chunksMain[7][3:0]
    74/80: $0\chunksMain[6][3:0]
    75/80: $0\chunksMain[5][3:0]
    76/80: $0\chunksMain[4][3:0]
    77/80: $0\chunksMain[3][3:0]
    78/80: $0\chunksMain[2][3:0]
    79/80: $0\chunksMain[1][3:0]
    80/80: $0\chunksMain[0][3:0]
Creating decoders for process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$196'.
     1/2: $1$mem2reg_rd$\chunksMain$input_selector.v:67$189_DATA[3:0]$198
     2/2: $0$mem2reg_rd$\chunksMain$input_selector.v:67$189_DATA[3:0]$197
Creating decoders for process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$193'.
     1/2: $1$mem2reg_rd$\chunksRegs$input_selector.v:66$188_DATA[3:0]$195
     2/2: $0$mem2reg_rd$\chunksRegs$input_selector.v:66$188_DATA[3:0]$194

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\r[0]' from process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
No latch inferred for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\r[1]' from process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
No latch inferred for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\r[2]' from process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
No latch inferred for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\r[3]' from process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[0]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[1]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[2]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[3]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[4]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[5]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[6]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[7]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[8]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[9]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[10]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[11]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[12]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[13]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[14]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecOrigin[15]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[0]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[1]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[2]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[3]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[4]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[5]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[6]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[7]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[8]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[9]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[10]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[11]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[12]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[13]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[14]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecMain[15]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[0]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[1]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[2]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[3]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[4]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[5]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[6]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[7]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[8]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[9]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[10]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[11]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[12]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[13]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[14]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.\wSelecRegs[15]' from process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[0]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[1]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[2]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[3]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[4]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[5]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[6]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[7]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[8]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[9]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[10]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[11]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[12]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[13]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[14]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksMain[15]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[0]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[1]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[2]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[3]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[4]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[5]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[6]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[7]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[8]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[9]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[10]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[11]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[12]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[13]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[14]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[15]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[16]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[17]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[18]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[19]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[20]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[21]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[22]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[23]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[24]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[25]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[26]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[27]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[28]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[29]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[30]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[31]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[32]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[33]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[34]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[35]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[36]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[37]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[38]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[39]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[40]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[41]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[42]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[43]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[44]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[45]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[46]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[47]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[48]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[49]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[50]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[51]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[52]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[53]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[54]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[55]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[56]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[57]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[58]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[59]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[60]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[61]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[62]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.\chunksRegs[63]' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$mem2reg_rd$\chunksMain$input_selector.v:67$189_DATA' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$196'.
No latch inferred for signal `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$mem2reg_rd$\chunksRegs$input_selector.v:66$188_DATA' from process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$193'.

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\data_selector.\wRegs' using process `\data_selector.$proc$data_selector.v:28$107'.
  created $dff cell `$procdff$316' with positive edge clock.
Creating register for signal `\data_selector.\data_out' using process `\data_selector.$proc$data_selector.v:28$107'.
  created $dff cell `$procdff$317' with positive edge clock.
Creating register for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\data_out' using process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
  created $dff cell `$procdff$318' with positive edge clock.
Creating register for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.\ctr' using process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
  created $dff cell `$procdff$319' with positive edge clock.
Creating register for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$mem2reg_rd$\r$scheduler.v:71$205_DATA' using process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
  created $dff cell `$procdff$320' with positive edge clock.
Creating register for signal `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$mem2reg_rd$\r$scheduler.v:71$205_ADDR' using process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
  created $dff cell `$procdff$321' with positive edge clock.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `data_selector.$proc$data_selector.v:28$107'.
Removing empty process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:34$213'.
Found and cleaned up 2 empty switches in `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
Removing empty process `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$proc$scheduler.v:60$206'.
Removing empty process `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.$proc$input_selector_block.v:17$200'.
Removing empty process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$199'.
Found and cleaned up 1 empty switch in `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$196'.
Removing empty process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$196'.
Found and cleaned up 1 empty switch in `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$193'.
Removing empty process `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$proc$input_selector.v:30$193'.
Cleaned up 4 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$procmux$218_CMP0' in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with $logic_not.
Replacing $eq cell `$procmux$250_CMP0' in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with $logic_not.
Replacing $eq cell `$procmux$315_CMP0' in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with $logic_not.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \data_selector..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  removing unused `$mux' cell `$procmux$223'.
  removing unused `$mux' cell `$procmux$226'.
  removing unused `$dff' cell `$procdff$320'.
  removing unused `$dff' cell `$procdff$321'.
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..

3.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
checking module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
checking module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
checking module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
checking module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
checking module data_selector..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$input_selector.v:67$192 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$229 (pure)
    Root of a mux tree: $procmux$232 (pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$220.
Running muxtree optimizer on module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 1 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
  Optimizing cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
  Optimizing cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$input_selector.v:67$192 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$229 (pure)
    Root of a mux tree: $procmux$232 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
  Optimizing cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
  Optimizing cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.6.15. Executing OPT_EXPR pass (perform const folding).

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$243_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$244_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$245_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$246_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$247_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$248_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$249_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$284_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$285_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$286_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$287_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$288_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$289_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$290_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$291_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$292_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$293_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$294_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$295_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$296_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$297_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$298_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$299_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$300_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$301_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$302_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$303_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$304_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$305_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$306_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$307_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$308_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$309_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$310_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$311_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$312_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$313_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$314_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$217_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$add$scheduler.v:70$211 ($add).
Removed top 30 bits (of 32) from port Y of cell $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$add$scheduler.v:70$211 ($add).
Removed top 30 bits (of 32) from wire $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$add$scheduler.v:70$211_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4:
  creating $macc model for $add$scheduler.v:70$211 ($add).
  creating $alu model for $macc $add$scheduler.v:70$211.
  creating $alu cell for $add$scheduler.v:70$211: $auto$alumacc.cc:470:replace_alu$323
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module data_selector:
  created 0 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$input_selector.v:67$192 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$229 (pure)
    Root of a mux tree: $procmux$232 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
  Optimizing cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
  Optimizing cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimized away 1 select inputs of $pmux cell `$procmux$234' in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Optimized away 1 select inputs of $pmux cell `$procmux$251' in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Optimized away 1 select inputs of $pmux cell `$procmux$214' in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  removing unused `$logic_not' cell `$procmux$250_CMP0'.
  removing unused `$logic_not' cell `$procmux$315_CMP0'.
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  removing unused `$logic_not' cell `$procmux$218_CMP0'.
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$input_selector.v:67$192 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$229 (pure)
    Root of a mux tree: $procmux$232 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
  Optimizing cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
  Optimizing cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping data_selector.$procdff$316 ($dff) with simplemap.
Mapping data_selector.$procdff$317 ($dff) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$217_CMP0 ($eq) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 2
Parameter \Y_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2'.

3.18.3. Continuing TECHMAP pass.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$auto$alumacc.cc:470:replace_alu$323 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$216_CMP0 ($eq) with simplemap.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 16
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=16\S_WIDTH=3'.

3.18.5. Continuing TECHMAP pass.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$214 using $paramod\_90_pmux\WIDTH=16\S_WIDTH=3.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$215_CMP0 ($eq) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$232 ($mux) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procmux$229 ($mux) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procdff$318 ($dff) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$procdff$319 ($dff) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:262$655 ($xor) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:263$656 ($xor) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.$and$<techmap.v>:260$654 ($and) with simplemap.

3.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=2'.

3.18.7. Executing PROC pass (convert processes to netlists).

3.18.7.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.7.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.7.3. Executing PROC_INIT pass (extract init attributes).

3.18.7.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.7.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=2.$proc$<techmap.v>:207$744'.
     1/4: $0\p[1:0] [1]
     2/4: $0\g[1:0] [1]
     3/4: $0\g[1:0] [0]
     4/4: $0\p[1:0] [0]

3.18.7.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=2.\g' from process `$paramod\_90_lcu\WIDTH=2.$proc$<techmap.v>:207$744'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=2.\p' from process `$paramod\_90_lcu\WIDTH=2.$proc$<techmap.v>:207$744'.

3.18.7.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.7.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=2.$proc$<techmap.v>:207$744'.
Cleaned up 0 empty switches.

3.18.8. Executing OPT pass (performing simple optimizations).

3.18.8.1. Executing OPT_EXPR pass (perform const folding).

3.18.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=2'.
Removed a total of 0 cells.

3.18.8.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=2..
  removing unused `$and' cell `$and$<techmap.v>:222$749'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

3.18.8.5. Finished fast OPT passes.

3.18.9. Continuing TECHMAP pass.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$auto$alumacc.cc:470:replace_alu$323.lcu using $paramod\_90_lcu\WIDTH=2.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.$ternary$<techmap.v>:258$653 ($mux) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.$not$<techmap.v>:258$652 ($not) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$auto$alumacc.cc:470:replace_alu$323.B_conv ($pos) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$auto$alumacc.cc:470:replace_alu$323.A_conv ($pos) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$686 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$687 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$685 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$684 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$683 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$682 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$681 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$680 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$679 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$678 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$677 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$676 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$675 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$674 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$673 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:441$672 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$and$<techmap.v>:434$671 ($and) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$and$<techmap.v>:434$670 ($and) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$and$<techmap.v>:434$669 ($and) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$ternary$<techmap.v>:445$668 ($mux) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$procmux$214.$reduce_or$<techmap.v>:445$667 ($reduce_or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$and$<techmap.v>:221$747 ($and) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$and$<techmap.v>:212$745 ($and) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$or$<techmap.v>:221$748 ($or) with simplemap.
Mapping $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.$techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$or$<techmap.v>:212$746 ($or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$236_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$235_CMP0 ($eq) with simplemap.

3.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 15
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=15'.

3.18.11. Continuing TECHMAP pass.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$234 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=15.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$not$input_selector.v:65$190 ($not) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$and$input_selector.v:65$191 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$ternary$input_selector.v:67$192 ($mux) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$237_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$238_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$239_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$240_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$241_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$242_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$243_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$244_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$245_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$246_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$247_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$248_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$249_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$252_CMP0 ($eq) with simplemap.

3.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 4
Parameter \S_WIDTH = 63
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=4\S_WIDTH=63'.

3.18.13. Continuing TECHMAP pass.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$251 using $paramod\_90_pmux\WIDTH=4\S_WIDTH=63.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$253_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$254_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$255_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$256_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$257_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$258_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$259_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$260_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$261_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$262_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$263_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$264_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$265_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$266_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$267_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$268_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$269_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$270_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$271_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$272_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$273_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$274_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$275_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$276_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$277_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$278_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$279_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$280_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$281_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$282_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$283_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$284_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$285_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$286_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$287_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$288_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$289_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$290_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$291_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$292_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$293_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$294_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$295_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$296_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$297_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$298_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$299_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$300_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$301_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$302_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$303_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$304_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$305_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$306_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$307_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$308_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$309_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$310_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$311_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$312_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$313_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$procmux$314_CMP0 ($eq) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$reduce_or$<techmap.v>:441$940 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$reduce_or$<techmap.v>:441$939 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$reduce_or$<techmap.v>:441$938 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$reduce_or$<techmap.v>:441$937 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$936 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$935 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$934 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$933 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$932 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$931 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$930 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$929 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$928 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$927 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$926 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$925 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$924 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$923 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$and$<techmap.v>:434$922 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$ternary$<techmap.v>:445$921 ($mux) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$234.$reduce_or$<techmap.v>:445$920 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$reduce_or$<techmap.v>:441$1230 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$reduce_or$<techmap.v>:441$1229 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$reduce_or$<techmap.v>:441$1228 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$reduce_or$<techmap.v>:441$1227 ($reduce_or) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1226 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1225 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1224 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1223 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1222 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1221 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1220 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1219 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1218 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1217 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1216 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1215 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1214 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1213 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1212 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1211 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1210 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1209 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1208 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1207 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1206 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1205 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1204 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1203 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1202 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1201 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1200 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1199 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1198 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1197 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1196 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1195 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1194 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1193 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1192 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1191 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1190 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1189 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1188 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1187 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1186 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1185 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1184 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1183 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1182 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1181 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1180 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1179 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1178 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1177 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1176 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1175 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1174 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1173 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1172 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1171 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1170 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1169 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1168 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1167 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1166 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1165 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$and$<techmap.v>:434$1164 ($and) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$ternary$<techmap.v>:445$1163 ($mux) with simplemap.
Mapping $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.$techmap$procmux$251.$reduce_or$<techmap.v>:445$1162 ($reduce_or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$892' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$890 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$964' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$962 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$965' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$962 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$950' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$947 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$994' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$992 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$996' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$992 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$981' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$977 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1024' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1022 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1025' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1022 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1026' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1022 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1010' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1007 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1011' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1007 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1054' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1052 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1057' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1052 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1042' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1037 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1084' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1082 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1085' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1082 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1087' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1082 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1070' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1067 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1067 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1114' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1112 [0] = \wSelecMain [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1112 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1117' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1112 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1101' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1097 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1102' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1097 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1130' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1127 [1] = \wSelecMain [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1131' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1127 [2] = \wSelecMain [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1132' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1127 [3] = \wSelecMain [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1233' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1231 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1273' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1271 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1274' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1271 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1254' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1251 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1313' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1311 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1315' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1311 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1295' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1291 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1353' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1351 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1354' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1351 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1355' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1351 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1334' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1331 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1335' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1331 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1393' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1391 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1396' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1391 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1376' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1371 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1433' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1431 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1434' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1431 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1436' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1431 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1414' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1411 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1416' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1411 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1473' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1471 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1475' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1471 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1476' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1471 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1455' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1451 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1456' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1451 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1513' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1511 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1514' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1511 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1515' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1511 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1511 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1494' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1491 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1495' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1491 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1496' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1491 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1557' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1551 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1553' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1551 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1537' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1531 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1597' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1591 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1593' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1591 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1594' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1591 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1577' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1571 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1574' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1571 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1637' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1631 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1633' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1631 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1635' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1631 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1617' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1611 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1615' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1611 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1677' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1673' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1674' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1675' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1657' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1651 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1654' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1651 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1655' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1651 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1717' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1711 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1713' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1711 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1716' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1711 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1697' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1691 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1696' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1691 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1757' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1753' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1754' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1756' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1737' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1731 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1734' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1731 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1736' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1731 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1797' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1791 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1793' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1791 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1795' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1791 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1796' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1791 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1777' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1771 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1775' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1771 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1776' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1771 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1837' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1831 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1833' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1831 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1834' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1831 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1835' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1831 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1836' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1831 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1817' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1811 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1814' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1811 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1815' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1811 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1816' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1811 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1878' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1871 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1873' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1871 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1858' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1851 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1918' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1911 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1913' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1911 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1914' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1911 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1898' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1891 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1894' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1891 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1958' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1951 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1953' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1951 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1955' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1951 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1938' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1931 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1935' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1931 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1998' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1991 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1993' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1991 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1994' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1991 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1995' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1991 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1978' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1971 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1974' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1971 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1975' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1971 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2038' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2031 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2033' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2031 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2036' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2031 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2018' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2011 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2016' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2011 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2078' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2071 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2073' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2071 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2074' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2071 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2076' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2071 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2058' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2051 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2054' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2051 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2056' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2051 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2118' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2111 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2111 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2111 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2111 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2098' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2091 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2095' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2091 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2096' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2091 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2158' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2151 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2153' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2151 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2154' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2151 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2155' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2151 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2156' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2151 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2138' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2131 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2134' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2131 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2135' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2131 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2136' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2131 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2197' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2191 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2198' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2191 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2193' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2191 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2177' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2171 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2178' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2171 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2237' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2231 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2238' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2231 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2233' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2231 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2234' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2231 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2217' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2211 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2218' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2211 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2214' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2211 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2277' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2271 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2278' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2271 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2273' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2271 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2275' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2271 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2257' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2251 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2258' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2251 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2255' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2251 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2317' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2311 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2318' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2311 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2313' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2311 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2314' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2311 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2315' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2311 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2297' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2291 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2298' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2291 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2294' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2291 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2295' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2291 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2357' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2351 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2358' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2351 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2353' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2351 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2356' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2351 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2337' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2331 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2338' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2331 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2336' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2331 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2397' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2391 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2398' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2391 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2393' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2391 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2394' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2391 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2396' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2391 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2377' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2371 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2378' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2371 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2374' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2371 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2376' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2371 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2437' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2431 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2438' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2431 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2433' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2431 [0] = \wSelecRegs [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2435' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2431 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2436' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2431 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2417' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2411 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2418' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2411 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2415' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2411 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2416' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2411 [3] = \wSelecRegs [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2457' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2451 [4] = \wSelecRegs [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2458' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2451 [5] = \wSelecRegs [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2451 [1] = \wSelecRegs [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2451 [2] = \wSelecRegs [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (?0) in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2451 [3] = \wSelecRegs [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$750' (??0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$ternary$<techmap.v>:258$653_Y [0] = \ctr [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$751' (??0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$ternary$<techmap.v>:258$653_Y [1] = \ctr [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$645' (?0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$642 [1] = \ctr [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$659' (?0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$657 [0] = \ctr [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$736' (?0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:263$656_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:262$655_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$735' (0?) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:262$655_Y [1] = \ctr [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$739' (1?) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$and$<techmap.v>:260$654_Y [0] = \ctr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$887' (const_and) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$and$<techmap.v>:212$745_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$889' (?0) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$auto$alumacc.cc:484:replace_alu$325 [0] = \ctr [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$740' (const_and) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$and$<techmap.v>:260$654_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$888' (0?) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$auto$alumacc.cc:484:replace_alu$325 [1] = $techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$and$<techmap.v>:221$747_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$738' (0?) in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:263$656_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$323.lcu.$and$<techmap.v>:221$747_Y'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2444' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2441 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2444' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2443' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2441 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2443' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2424' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2421 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2424' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2423' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2421 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2423' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2414' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2411 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2414' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2413' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2411 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2413' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2404' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2401 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2404' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2384' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2381 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2384' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2375' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2371 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2375' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2373' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2371 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2373' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2364' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2361 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2364' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2355' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2351 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2355' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2354' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2351 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2354' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2344' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2341 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2344' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2335' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2331 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2335' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2334' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2331 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2334' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2333' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2331 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2333' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2324' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2321 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2324' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2322' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2321 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2322' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2304' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2301 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2304' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2296' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2291 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2296' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2293' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2291 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2293' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2284' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2281 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2284' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2276' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2271 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2276' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2274' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2271 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2274' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2264' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2261 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2264' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2256' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2251 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2256' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2254' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2251 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2254' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2253' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2251 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2253' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2244' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2241 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2244' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2241 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2242' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2236' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2231 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2236' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2235' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2231 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2235' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2224' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2221 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2224' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2216' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2211 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2216' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2215' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2211 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2215' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2213' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2211 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2213' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2204' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2201 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2204' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2196' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2191 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2196' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2195' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2191 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2195' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2194' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2191 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2194' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2184' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2464'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2181 [2] = $auto$simplemap.cc:127:simplemap_reduce$2461 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2184' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2176' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2171 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2176' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2175' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2171 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2175' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2174' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2171 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2174' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2173' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2171 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2173' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2163' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2161 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2163' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2162' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2161 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2162' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2143' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2141 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2143' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2137' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2131 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2137' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2133' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2131 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2133' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2123' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2121 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2123' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2117' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2111 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2117' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2114' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2111 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2103' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2101 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2103' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2097' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2091 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2097' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2094' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2091 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2093' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2091 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2082' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2081 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2082' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2077' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2071 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2077' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2075' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2071 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2075' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2057' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2051 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2057' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2055' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2051 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2055' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2053' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2051 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2053' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2037' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2031 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2037' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2035' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2031 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2035' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2034' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2031 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2034' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2011 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2017' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2015' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2011 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2015' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2014' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2011 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2014' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2013' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2011 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2013' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2002' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2001 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2002' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1997' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1991 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1997' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1996' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1991 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1996' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1977' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1971 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1977' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1976' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1971 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1976' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1973' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1971 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1973' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1957' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1951 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1957' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1956' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1951 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1956' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1954' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1951 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1954' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1937' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1931 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1937' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1936' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1931 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1936' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1934' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1931 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1934' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1933' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1931 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1933' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1922' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1921 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1922' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1917' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1911 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1917' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1916' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1911 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1916' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1915' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1911 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1915' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1897' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1891 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1897' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1896' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1891 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1896' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1895' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1891 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1895' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1893' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1891 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1893' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1877' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1871 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1877' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1876' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1871 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1876' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1875' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1871 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1875' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1874' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1871 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1874' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1857' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1851 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1857' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1856' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1851 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1856' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1855' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1851 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1855' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1854' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1851 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1854' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1853' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1851 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1853' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1843' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1841 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1843' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1842' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1841 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1842' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1823' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1821 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1823' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1813' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1811 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1813' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1818' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1811 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1818' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1803' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1801 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1803' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1794' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1791 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1794' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1798' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1791 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1798' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1783' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1781 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1783' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1774' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1771 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1774' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1773' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1771 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1773' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1778' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1771 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1778' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1762' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1761 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1762' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1755' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1751 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1755' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1758' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1751 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1758' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1735' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1731 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1735' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1733' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1731 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1733' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1738' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1731 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1738' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1715' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1711 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1715' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1714' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1711 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1714' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1718' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1711 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1718' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1695' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1691 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1695' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1694' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1691 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1694' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1693' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1691 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1693' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1698' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1691 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1698' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1682' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1681 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1682' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1676' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1671 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1676' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1678' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1671 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1678' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1656' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1651 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1656' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1653' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1651 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1653' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1658' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1651 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1658' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1636' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1631 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1636' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1634' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1631 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1634' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1638' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1631 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1638' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1616' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1611 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1616' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1614' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1611 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1614' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1613' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1611 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1613' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1618' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1611 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1618' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1602' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1601 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1602' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1596' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1591 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1596' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1595' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1591 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1595' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1598' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1591 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1598' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1576' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1571 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1576' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1575' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1571 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1575' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1573' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1571 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1573' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1578' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1571 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1578' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1556' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1551 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1556' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1555' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1551 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1555' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1554' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1551 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1554' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1558' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1551 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1558' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1536' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1531 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1536' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1535' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1531 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1535' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1534' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1531 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1534' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1533' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1531 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1533' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1538' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1531 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1538' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1523' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1521 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1523' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1522' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1521 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1522' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1517' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1511 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1517' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1511 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1518' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1503' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1501 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1503' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1497' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1491 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1497' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1493' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1491 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1493' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1498' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1491 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1498' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1483' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1481 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1483' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1477' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1471 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1477' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1474' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1471 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1474' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1478' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1471 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1478' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1463' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2463'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1461 [1] = $auto$simplemap.cc:127:simplemap_reduce$2461 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1463' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1457' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1451 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1457' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1454' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1451 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1454' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1453' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1451 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1453' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1458' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1451 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1458' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1442' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1441 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1442' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1437' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1431 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1437' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1435' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1431 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1435' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1438' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1431 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1438' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1417' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1411 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1417' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1415' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1411 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1415' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1413' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1411 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1413' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1418' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1411 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1418' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1397' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1397' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1395' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1395' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1394' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1394' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1398' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1398' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1377' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1371 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1377' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1375' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1371 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1375' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1374' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1371 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1374' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1373' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1371 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1373' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1378' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1371 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1378' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1361 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1362' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1357' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1351 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1357' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1351 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1356' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1358' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1351 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1358' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1337' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1337' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1336' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1336' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1333' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1333' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1338' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1331 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1338' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1317' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1311 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1317' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1316' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1311 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1316' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1314' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1311 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1314' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1318' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1311 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1318' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1297' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1291 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1297' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1296' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1291 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1296' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1294' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1291 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1294' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1293' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1291 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1293' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1298' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1291 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1298' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1282' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2402'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1281 [0] = $auto$simplemap.cc:127:simplemap_reduce$2401 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1282' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1277' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1271 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1277' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1276' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1271 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1276' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1275' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1271 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1275' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1278' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1271 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1278' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1257' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1251 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1257' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1256' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1251 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1256' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1255' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1251 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1255' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1253' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1251 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1253' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1258' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1251 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1258' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1237' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1231 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1237' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1236' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1231 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1236' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1235' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1231 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1235' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1234' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1231 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1234' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1238' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1231 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1238' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1148' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2157'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [4] = $auto$simplemap.cc:250:simplemap_eqne$2151 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1148' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1147' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2316'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [3] = $auto$simplemap.cc:250:simplemap_eqne$2311 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1147' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1146' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [2] = $auto$simplemap.cc:250:simplemap_eqne$2391 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1146' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1145' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2434'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [1] = $auto$simplemap.cc:250:simplemap_eqne$2431 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1145' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1144' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2453'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [0] = $auto$simplemap.cc:250:simplemap_eqne$2451 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1144' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1149' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1838'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1142 [5] = $auto$simplemap.cc:250:simplemap_eqne$1831 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1149' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1122' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1137'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1120 [1] = $auto$simplemap.cc:127:simplemap_reduce$1135 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1122' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1107' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1137'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [1] = $auto$simplemap.cc:127:simplemap_reduce$1135 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1107' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1100' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1097 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1100' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1099' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1097 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1099' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1071' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1067 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1071' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1069' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1067 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1069' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1056' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1052 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1056' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1055' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1052 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1055' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1041' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1037 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1041' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1040' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1037 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1040' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1039' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1037 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1039' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1031' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1091'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1030 [0] = $auto$simplemap.cc:127:simplemap_reduce$1090 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1031' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1009' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1007 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1009' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1012' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1007 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1012' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$995' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$992 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$995' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$997' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$992 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$997' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$980' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$977 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$980' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$979' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$977 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$979' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$982' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$977 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$982' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$971' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1091'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$970 [0] = $auto$simplemap.cc:127:simplemap_reduce$1090 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$971' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$966' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$962 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$966' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$967' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$962 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$967' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$951' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$947 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$951' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$949' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$947 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$949' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$952' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$947 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$952' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$909' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$905 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$909' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$908' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$905 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$908' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$907' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1129'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$905 [0] = $auto$simplemap.cc:250:simplemap_eqne$1127 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$907' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$910' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$905 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$910' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$894' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1086'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$890 [2] = $auto$simplemap.cc:250:simplemap_eqne$1082 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$894' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$893' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$890 [1] = $auto$simplemap.cc:250:simplemap_eqne$1112 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$893' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$895' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1027'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$890 [3] = $auto$simplemap.cc:250:simplemap_eqne$1022 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$895' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2383' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2381 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2383' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2382' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2381 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2382' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2361 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2363' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2361 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2362' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2343' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2341 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2343' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2342' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2341 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2342' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2303' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2301 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2303' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2302' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2301 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2302' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2283' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2281 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2283' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2282' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2281 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2282' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2263' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2261 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2263' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2262' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2261 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2262' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2223' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2221 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2223' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2222' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2221 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2222' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2203' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2201 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2203' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2202' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2201 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2202' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2183' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2181 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2183' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2182' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2181 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2182' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2144' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2141 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2144' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2142' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2141 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2142' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2124' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2121 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2124' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2122' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2121 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2122' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2104' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2101 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2104' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2102' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2101 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2102' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2084' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2081 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2084' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2083' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2081 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2083' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2064' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2061 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2064' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2063' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2061 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2063' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2062' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2061 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2062' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2044' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2041 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2044' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2043' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2041 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2043' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2042' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2041 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2042' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2024' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2021 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2024' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2023' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2021 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2023' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2022' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2021 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2022' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2004' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2001 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2004' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2003' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2001 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2003' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1984' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1981 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1984' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1983' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1981 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1983' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1982' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1981 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1982' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1964' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1961 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1964' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1963' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1961 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1963' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1962' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1961 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1962' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1944' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1941 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1944' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1943' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1941 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1943' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1942' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1941 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1942' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1924' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1921 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1924' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1923' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1921 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1923' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1904' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1901 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1904' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1903' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1901 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1903' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1902' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1901 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1902' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1884' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1881 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1884' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1883' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1881 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1883' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1882' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1881 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1882' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1864' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2164'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1861 [2] = $auto$simplemap.cc:127:simplemap_reduce$2161 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1864' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1863' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1861 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1863' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1862' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1861 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1862' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1846' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2166'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1845 = $auto$simplemap.cc:127:simplemap_reduce$2165
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1846' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1824' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1821 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1824' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1822' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1821 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1822' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1804' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1801 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1804' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1802' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1801 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1802' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1784' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1781 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1784' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1782' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1781 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1782' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1764' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1761 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1764' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1763' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1761 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1763' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1744' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1741 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1744' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1743' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1741 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1743' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1742' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1741 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1742' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1724' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1721 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1724' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1723' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1721 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1723' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1722' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1721 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1722' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1704' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1701 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1704' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1703' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1701 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1703' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1702' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1701 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1702' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1684' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1681 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1684' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1683' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1681 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1683' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1664' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1661 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1664' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1663' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1661 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1663' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1662' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1661 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1662' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1644' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1641 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1644' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1643' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1641 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1643' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1642' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1641 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1642' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1624' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1621 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1624' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1623' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1621 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1623' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1622' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1621 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1622' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1604' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1601 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1604' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1603' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1601 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1603' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1584' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1581 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1584' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1583' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1581 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1583' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1582' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1581 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1582' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1564' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1561 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1564' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1563' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1561 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1563' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1562' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1561 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1562' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1544' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1844'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1541 [2] = $auto$simplemap.cc:127:simplemap_reduce$1841 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1544' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1543' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1541 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1543' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1542' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1541 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1542' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1526' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2166'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1525 = $auto$simplemap.cc:127:simplemap_reduce$2165
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1526' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1504' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1501 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1504' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1502' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1501 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1502' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1484' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1481 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1484' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1482' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1481 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1482' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1464' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1461 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1464' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1462' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1461 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1462' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1444' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1441 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1444' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1443' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1441 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1443' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1424' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1421 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1424' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1423' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1421 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1423' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1422' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1421 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1422' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1404' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1401 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1404' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1403' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1401 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1403' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1402' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1401 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1402' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1384' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1381 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1384' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1383' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1381 [1] = $auto$simplemap.cc:127:simplemap_reduce$2401 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1383' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1382' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1381 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1382' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1364' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1361 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1364' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1361 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1363' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1344' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1341 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1344' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1343' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1341 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1343' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1342' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1341 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1342' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1324' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1321 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1324' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1323' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1321 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1323' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1322' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1321 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1322' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1304' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1301 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1304' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1303' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1301 [1] = $auto$simplemap.cc:127:simplemap_reduce$2321 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1303' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1302' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1301 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1302' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1284' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1281 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1284' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1283' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1281 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1283' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1264' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1261 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1264' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1263' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1261 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1263' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1262' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2462'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1261 [0] = $auto$simplemap.cc:127:simplemap_reduce$2461 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1262' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1244' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1241 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1244' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1243' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1241 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1243' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2442'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1241 [0] = $auto$simplemap.cc:127:simplemap_reduce$2441 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1242' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1155' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1524'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1152 [2] = $auto$simplemap.cc:127:simplemap_reduce$1521 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1155' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1154' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2243'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1152 [1] = $auto$simplemap.cc:127:simplemap_reduce$2241 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1154' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1153' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2422'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1152 [0] = $auto$simplemap.cc:127:simplemap_reduce$2421 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1153' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1077' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1092'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1075 [1] = $auto$simplemap.cc:127:simplemap_reduce$1090 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1077' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1076' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1136'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1075 [0] = $auto$simplemap.cc:127:simplemap_reduce$1135 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1076' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1062' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1092'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1060 [1] = $auto$simplemap.cc:127:simplemap_reduce$1090 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1062' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1061' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1121'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1060 [0] = $auto$simplemap.cc:127:simplemap_reduce$1120 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1061' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1047' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1092'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1045 [1] = $auto$simplemap.cc:127:simplemap_reduce$1090 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1047' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1046' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1106'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1045 [0] = $auto$simplemap.cc:127:simplemap_reduce$1105 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1046' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1017' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1032'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1015 [1] = $auto$simplemap.cc:127:simplemap_reduce$1030 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1017' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1016' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1136'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1015 [0] = $auto$simplemap.cc:127:simplemap_reduce$1135 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1016' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1002' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1032'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1000 [1] = $auto$simplemap.cc:127:simplemap_reduce$1030 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1002' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1001' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1121'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1000 [0] = $auto$simplemap.cc:127:simplemap_reduce$1120 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1001' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$987' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1032'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$985 [1] = $auto$simplemap.cc:127:simplemap_reduce$1030 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$987' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$986' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1106'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$985 [0] = $auto$simplemap.cc:127:simplemap_reduce$1105 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$986' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$957' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$972'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$955 [1] = $auto$simplemap.cc:127:simplemap_reduce$970 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$957' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$956' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1136'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$955 [0] = $auto$simplemap.cc:127:simplemap_reduce$1135 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$956' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$915' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$972'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$913 [1] = $auto$simplemap.cc:127:simplemap_reduce$970 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$915' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$914' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1106'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$913 [0] = $auto$simplemap.cc:127:simplemap_reduce$1105 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$914' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$900' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$972'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$898 [1] = $auto$simplemap.cc:127:simplemap_reduce$970 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$900' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$899' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1121'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$898 [0] = $auto$simplemap.cc:127:simplemap_reduce$1120 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$899' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2106' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2426'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2105 = $auto$simplemap.cc:127:simplemap_reduce$2425
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2106' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2086' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2406'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2085 = $auto$simplemap.cc:127:simplemap_reduce$2405
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2086' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2066' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2065 = $auto$simplemap.cc:127:simplemap_reduce$2385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2066' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2046' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2366'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2045 = $auto$simplemap.cc:127:simplemap_reduce$2365
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2046' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2026' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2346'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2025 = $auto$simplemap.cc:127:simplemap_reduce$2345
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2026' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2006' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2326'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2005 = $auto$simplemap.cc:127:simplemap_reduce$2325
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2006' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1986' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2306'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1985 = $auto$simplemap.cc:127:simplemap_reduce$2305
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1986' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1966' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2286'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1965 = $auto$simplemap.cc:127:simplemap_reduce$2285
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1966' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1946' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2266'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1945 = $auto$simplemap.cc:127:simplemap_reduce$2265
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1946' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1926' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2246'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1925 = $auto$simplemap.cc:127:simplemap_reduce$2245
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1926' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1906' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2226'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1905 = $auto$simplemap.cc:127:simplemap_reduce$2225
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1906' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1886' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2206'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1885 = $auto$simplemap.cc:127:simplemap_reduce$2205
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1886' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1866' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2186'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1865 = $auto$simplemap.cc:127:simplemap_reduce$2185
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1866' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1826' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2146'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1825 = $auto$simplemap.cc:127:simplemap_reduce$2145
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1826' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1806' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2126'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1805 = $auto$simplemap.cc:127:simplemap_reduce$2125
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1806' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1786' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2426'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1785 = $auto$simplemap.cc:127:simplemap_reduce$2425
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1786' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1766' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2406'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1765 = $auto$simplemap.cc:127:simplemap_reduce$2405
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1766' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1746' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1745 = $auto$simplemap.cc:127:simplemap_reduce$2385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1746' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1726' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2366'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1725 = $auto$simplemap.cc:127:simplemap_reduce$2365
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1726' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1706' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2346'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1705 = $auto$simplemap.cc:127:simplemap_reduce$2345
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1706' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1686' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2326'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1685 = $auto$simplemap.cc:127:simplemap_reduce$2325
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1686' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1666' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2306'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1665 = $auto$simplemap.cc:127:simplemap_reduce$2305
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1666' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1646' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2286'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1645 = $auto$simplemap.cc:127:simplemap_reduce$2285
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1646' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1626' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2266'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1625 = $auto$simplemap.cc:127:simplemap_reduce$2265
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1626' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1606' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2246'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1605 = $auto$simplemap.cc:127:simplemap_reduce$2245
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1606' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1586' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2226'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1585 = $auto$simplemap.cc:127:simplemap_reduce$2225
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1586' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1566' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2206'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1565 = $auto$simplemap.cc:127:simplemap_reduce$2205
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1566' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1546' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2186'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1545 = $auto$simplemap.cc:127:simplemap_reduce$2185
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1546' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1506' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2146'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1505 = $auto$simplemap.cc:127:simplemap_reduce$2145
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1506' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1486' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2126'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1485 = $auto$simplemap.cc:127:simplemap_reduce$2125
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1486' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1466' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2426'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1465 = $auto$simplemap.cc:127:simplemap_reduce$2425
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1466' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1446' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2406'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1445 = $auto$simplemap.cc:127:simplemap_reduce$2405
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1446' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1426' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2386'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1425 = $auto$simplemap.cc:127:simplemap_reduce$2385
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1426' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1406' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2366'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1405 = $auto$simplemap.cc:127:simplemap_reduce$2365
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1406' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1386' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2346'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1385 = $auto$simplemap.cc:127:simplemap_reduce$2345
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1386' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1366' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2326'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1365 = $auto$simplemap.cc:127:simplemap_reduce$2325
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1366' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1346' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2306'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1345 = $auto$simplemap.cc:127:simplemap_reduce$2305
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1346' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1326' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2286'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1325 = $auto$simplemap.cc:127:simplemap_reduce$2285
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1326' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1306' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2266'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1305 = $auto$simplemap.cc:127:simplemap_reduce$2265
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1306' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1286' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2246'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1285 = $auto$simplemap.cc:127:simplemap_reduce$2245
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1286' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1266' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2226'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 = $auto$simplemap.cc:127:simplemap_reduce$2225
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1266' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1246' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2206'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1245 = $auto$simplemap.cc:127:simplemap_reduce$2205
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1246' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1157' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2186'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1156 = $auto$simplemap.cc:127:simplemap_reduce$2185
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1157' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2466' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2146'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2465 = $auto$simplemap.cc:127:simplemap_reduce$2145
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2466' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2446' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2126'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2445 = $auto$simplemap.cc:127:simplemap_reduce$2125
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2446' from module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$690' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$734'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$688 [0] = $techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:262$655_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$690' from module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$660' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$691'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$657 [1] = $auto$simplemap.cc:250:simplemap_eqne$688 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$660' from module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$644' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$734'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$642 [0] = $techmap$auto$alumacc.cc:470:replace_alu$323.$xor$<techmap.v>:262$655_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$644' from module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 463 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$752'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$753'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$886'.
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.20.2. Extracting gate netlist of module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.20.3. Extracting gate netlist of module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' to `<abc-temp-dir>/input.blif'..
Extracted 908 gates and 1241 wires to a netlist network with 332 inputs and 4 outputs.

3.20.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       72
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:      303
ABC RESULTS:              OAI3 cells:        9
ABC RESULTS:              OAI4 cells:      144
ABC RESULTS:                OR cells:      244
ABC RESULTS:        internal signals:      905
ABC RESULTS:           input signals:      332
ABC RESULTS:          output signals:        4
Removing temp directory.

3.20.4. Extracting gate netlist of module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 125 gates and 194 wires to a netlist network with 67 inputs and 18 outputs.

3.20.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:       16
ABC RESULTS:               MUX cells:       32
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       18
ABC RESULTS:              OAI3 cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:      109
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:       18
Removing temp directory.

3.20.5. Extracting gate netlist of module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.20.6. Extracting gate netlist of module `\data_selector' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block
Used module:         $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64
Used module:     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4

3.22.2. Analyzing design hierarchy..
Top module:  \data_selector
Used module:     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block
Used module:         $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64
Used module:     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4
Used module:         $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4
Removed 0 unused modules.

3.23. Printing statistics.

=== $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block ===

   Number of wires:                 72
   Number of wire bits:            801
   Number of public wires:          72
   Number of public wire bits:     801
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64     16

=== $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4 ===

   Number of wires:                  5
   Number of wire bits:            128
   Number of public wires:           5
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64 ===

   Number of wires:                892
   Number of wire bits:           1461
   Number of public wires:          87
   Number of public wire bits:     656
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                809
     $_AND_                         72
     $_AOI3_                         1
     $_AOI4_                         8
     $_MUX_                         12
     $_NAND_                        10
     $_NOR_                          6
     $_NOT_                        303
     $_OAI3_                         9
     $_OAI4_                       144
     $_OR_                         244

=== $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4 ===

   Number of wires:                 81
   Number of wire bits:            236
   Number of public wires:           9
   Number of public wire bits:     148
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_AND_                          2
     $_AOI3_                         1
     $_AOI4_                        16
     $_DFF_P_                       18
     $_MUX_                         32
     $_NOR_                          2
     $_NOT_                         18
     $_OAI3_                        16
     $_OR_                           1

=== $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4 ===

   Number of wires:                  8
   Number of wire bits:            146
   Number of public wires:           8
   Number of public wire bits:     146
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4      1
     $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4      1

=== data_selector ===

   Number of wires:                 20
   Number of wire bits:            851
   Number of public wires:          20
   Number of public wire bits:     851
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                274
     $_DFF_P_                      272
     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block      1
     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4      1

=== design hierarchy ===

   data_selector                     1
     $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block      1
       $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64     16
     $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4      1
       $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4      1
       $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4      1

   Number of wires:              14458
   Number of wire bits:          25538
   Number of public wires:        1506
   Number of public wire bits:   12570
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13322
     $_AND_                       1154
     $_AOI3_                        17
     $_AOI4_                       144
     $_DFF_P_                      290
     $_MUX_                        224
     $_NAND_                       160
     $_NOR_                         98
     $_NOT_                       4866
     $_OAI3_                       160
     $_OAI4_                      2304
     $_OR_                        3905

3.24. Executing CHECK pass (checking for obvious problems).
checking module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
checking module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
checking module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
checking module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
checking module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
checking module data_selector..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block':
Mapping DFF cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4':
Mapping DFF cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64':
Mapping DFF cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4':
  mapped 18 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4':
Mapping DFF cells in module `\data_selector':
  mapped 272 $_DFF_P_ cells to \DFFPOSX1 cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
  Optimizing cells in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
  Optimizing cells in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block'.
Finding identical cells in module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64'.
Finding identical cells in module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4'.
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block..
Finding unused cells or wires in module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64..
Finding unused cells or wires in module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4..
Finding unused cells or wires in module \data_selector..

5.8. Executing OPT_EXPR pass (perform const folding).

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `$paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.2. Extracting gate netlist of module `$paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.3. Extracting gate netlist of module `$paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64' to `<abc-temp-dir>/input.blif'..
Extracted 809 gates and 1141 wires to a netlist network with 332 inputs and 4 outputs.

6.3.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       14
ABC RESULTS:           AOI21X1 cells:       15
ABC RESULTS:           AOI22X1 cells:      100
ABC RESULTS:             INVX1 cells:       82
ABC RESULTS:           NAND2X1 cells:      128
ABC RESULTS:           NAND3X1 cells:       31
ABC RESULTS:            NOR2X1 cells:       74
ABC RESULTS:            NOR3X1 cells:       53
ABC RESULTS:           OAI21X1 cells:       21
ABC RESULTS:           OAI22X1 cells:       17
ABC RESULTS:             OR2X2 cells:        7
ABC RESULTS:        internal signals:      805
ABC RESULTS:           input signals:      332
ABC RESULTS:          output signals:        4
Removing temp directory.

6.4. Extracting gate netlist of module `$paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 88 gates and 155 wires to a netlist network with 67 inputs and 18 outputs.

6.4.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.4.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:             INVX1 cells:        3
ABC RESULTS:           NAND2X1 cells:       32
ABC RESULTS:           NAND3X1 cells:       64
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:           OAI21X1 cells:       17
ABC RESULTS:        internal signals:       70
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:       18
Removing temp directory.

6.5. Extracting gate netlist of module `$paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.6. Extracting gate netlist of module `\data_selector' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
Mapping data_selector.input_selector_block using $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
Mapping data_selector.scheduler_block using $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
Mapping data_selector.input_selector_block.input_selector_i[0].input_selector_j[0].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[0].input_selector_j[2].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[0].input_selector_j[3].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[1].input_selector_j[0].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[1].input_selector_j[1].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[1].input_selector_j[2].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[1].input_selector_j[3].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[2].input_selector_j[0].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[2].input_selector_j[1].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[2].input_selector_j[2].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[2].input_selector_j[3].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[3].input_selector_j[0].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[3].input_selector_j[1].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[3].input_selector_j[2].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[3].input_selector_j[3].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.input_selector_block.input_selector_i[0].input_selector_j[1].input_selector using $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Mapping data_selector.scheduler_block.adapter_4_to_1 using $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
Mapping data_selector.scheduler_block.scheduler using $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
No more expansions possible.
Deleting now unused module $paramod$6ad25a3e4dc37cadd8c32f3c6d907b12ac453592\input_selector_block.
Deleting now unused module $paramod\adapter_4_to_1\DATA_WIDTH=16\N_INPUTS=4.
Deleting now unused module $paramod\input_selector\DATA_WIDTH=4\MAIN_INPUTS=16\REGS_INPUTS=64.
Deleting now unused module $paramod\scheduler\DATA_WIDTH=16\N_INPUTS=4.
Deleting now unused module $paramod\scheduler_block\DATA_WIDTH=16\N_INPUTS=4.
Removed 0 unused cells and 19821 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port data_selector.clk: Missing option -inpad.
Mapping port data_selector.data_out using BUFX2.
Don't map input port data_selector.rst: Missing option -inpad.
Don't map input port data_selector.wBusy: Missing option -inpad.
Don't map input port data_selector.wData: Missing option -inpad.
Don't map input port data_selector.wRegs0: Missing option -inpad.
Don't map input port data_selector.wRegs1: Missing option -inpad.
Don't map input port data_selector.wRegs2: Missing option -inpad.
Don't map input port data_selector.wRegs3: Missing option -inpad.
Don't map input port data_selector.wRegs4: Missing option -inpad.
Don't map input port data_selector.wRegs5: Missing option -inpad.
Don't map input port data_selector.wRegs6: Missing option -inpad.
Don't map input port data_selector.wRegs7: Missing option -inpad.
Don't map input port data_selector.wSelec: Missing option -inpad.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \data_selector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \data_selector.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\data_selector'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \data_selector..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing BLIF backend.

End of script. Logfile hash: b33857200a
CPU: user 1.44s system 0.02s, MEM: 63.70 MB total, 35.61 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 19% 2x clean (0 sec), 15% 16x opt_clean (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 37 (load 694.304) from node scheduler_block.scheduler.ctr<0>,
driven by DFFPOSX1 with strength 252.842 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.85499 (latency = 570.999 ps)
Top input node fanout is 290 (load 8097.81) from node clk.
Warning 1: load of 196.196 is 1.67978 times greater than strongest gate NAND2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 374.526 is 1.68473 times greater than strongest gate OR2X2
Warning 3: load of 212.566 is 1.81994 times greater than strongest gate NAND2X1
Warning 4: load of 273.692 is 2.34328 times greater than strongest gate NAND2X1
Warning 6: load of 294.486 is 2.52132 times greater than strongest gate NAND2X1
Warning 7: load of 343.459 is 2.94061 times greater than strongest gate NAND2X1
451 gates exceed specified minimum load.
68 buffers were added.
35 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 8745    	Out: 8710    	-35
	"2" gates	In: 352    	Out: 384    	+32

gates resized: 103
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 16 (load 411.72) from node _2712_,
driven by NAND2X1 with strength 116.798 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.85499 (latency = 570.999 ps)
Top input node fanout is 43 (load 401.264) from node clk.
Warning 1: load of 205.528 is 1.75968 times greater than strongest gate NAND2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 3: load of 212.566 is 1.81994 times greater than strongest gate NAND2X1
Warning 4: load of 273.692 is 2.34328 times greater than strongest gate NAND2X1
Warning 6: load of 294.486 is 2.52132 times greater than strongest gate NAND2X1
Warning 7: load of 343.459 is 2.94061 times greater than strongest gate NAND2X1
449 gates exceed specified minimum load.
6 buffers were added.
43 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 8710    	Out: 8710    	+0
	"2" gates	In: 452    	Out: 409    	-43
	"4" gates	In: 3    	Out: 46    	+43

gates resized: 49
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Top internal fanout is 16 (load 411.72) from node _2712_,
driven by NAND2X1 with strength 116.798 (fF driven at latency 200)
Top fanout load-to-strength ratio is 2.85499 (latency = 570.999 ps)
Top input node fanout is 16 (load 298.483) from node wData<32>.
Warning 1: load of 205.528 is 1.75968 times greater than strongest gate NAND2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 3: load of 212.566 is 1.81994 times greater than strongest gate NAND2X1
Warning 4: load of 273.692 is 2.34328 times greater than strongest gate NAND2X1
Warning 6: load of 294.486 is 2.52132 times greater than strongest gate NAND2X1
Warning 7: load of 343.459 is 2.94061 times greater than strongest gate NAND2X1
449 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 8710    	Out: 8710    	+0
	"2" gates	In: 415    	Out: 415    	+0
	"4" gates	In: 46    	Out: 46    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis
Files:
   Verilog: /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.rtl.v
   Verilog: /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.rtlnopwr.v
   Spice:   /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on Mon Nov 19 22:30:20 CST 2018
Running blif2cel.tcl
Loaded LEF file (/usr/share/qflow/tech/osu018/osu018_stdcells.lef) for reading...
Loaded BLIF file (/home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.blif) for reading ...
Loaded CEL file (/home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/layout/data_selector.cel) for writing...
1st pass of blif file /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.blif. . .
Reading macros from LEF file. . .
Parsing macro AND2X2:  Ports are:
parse_pin
macroname: AND2X2, pinname: A
Port type: INPUT 
A -120 -131 1
parse_pin
macroname: AND2X2, pinname: B
Port type: INPUT 
B -40 -50 1
parse_pin
macroname: AND2X2, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: AND2X2, pinname: Y
Port type: OUTPUT 
Y 89 -340 1
parse_pin
macroname: AND2X2, pinname: vdd
Port type: INOUT 
vdd 40 295 1
Parsing macro AOI21X1:  Ports are:
parse_pin
macroname: AOI21X1, pinname: A
Port type: INPUT 
A -80 -35 1
parse_pin
macroname: AOI21X1, pinname: B
Port type: INPUT 
B -40 -131 1
parse_pin
macroname: AOI21X1, pinname: C
Port type: INPUT 
C 120 -251 1
parse_pin
macroname: AOI21X1, pinname: gnd
Port type: INOUT 
gnd 120 -435 1
parse_pin
macroname: AOI21X1, pinname: Y
Port type: OUTPUT 
Y 40 -340 1
parse_pin
macroname: AOI21X1, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro AOI22X1:  Ports are:
parse_pin
macroname: AOI22X1, pinname: A
Port type: INPUT 
A -120 -35 1
parse_pin
macroname: AOI22X1, pinname: B
Port type: INPUT 
B -80 -131 1
parse_pin
macroname: AOI22X1, pinname: C
Port type: INPUT 
C 160 -31 1
parse_pin
macroname: AOI22X1, pinname: D
Port type: INPUT 
D 70 -90 1
parse_pin
macroname: AOI22X1, pinname: gnd
Port type: INOUT 
gnd 160 -385 1
parse_pin
macroname: AOI22X1, pinname: Y
Port type: OUTPUT 
Y 5 -216 1
parse_pin
macroname: AOI22X1, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro BUFX2:  Ports are:
parse_pin
macroname: BUFX2, pinname: A
Port type: INPUT 
A -80 -70 1
parse_pin
macroname: BUFX2, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: BUFX2, pinname: Y
Port type: OUTPUT 
Y 85 0 1
parse_pin
macroname: BUFX2, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro BUFX4:  Ports are:
parse_pin
macroname: BUFX4, pinname: A
Port type: INPUT 
A -115 -50 1
parse_pin
macroname: BUFX4, pinname: gnd
Port type: INOUT 
gnd 120 -385 1
parse_pin
macroname: BUFX4, pinname: Y
Port type: OUTPUT 
Y 44 -150 1
parse_pin
macroname: BUFX4, pinname: vdd
Port type: INOUT 
vdd 120 285 1
Parsing macro NOR3X1:  Ports are:
parse_pin
macroname: NOR3X1, pinname: A
Port type: INPUT 
A -175 -251 1
parse_pin
macroname: NOR3X1, pinname: B
Port type: INPUT 
B -100 -150 1
parse_pin
macroname: NOR3X1, pinname: C
Port type: INPUT 
C -20 -50 1
parse_pin
macroname: NOR3X1, pinname: gnd
Port type: INOUT 
gnd -40 -445 1
parse_pin
macroname: NOR3X1, pinname: Y
Port type: OUTPUT 
Y -106 -335 1
parse_pin
macroname: NOR3X1, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro DFFPOSX1:  Ports are:
parse_pin
macroname: DFFPOSX1, pinname: Q
Port type: OUTPUT 
Q 290 -210 1
parse_pin
macroname: DFFPOSX1, pinname: CLK
Port type: INPUT 
CLK -250 -140 1
parse_pin
macroname: DFFPOSX1, pinname: D
Port type: INPUT 
D -225 -56 1
parse_pin
macroname: DFFPOSX1, pinname: gnd
Port type: INOUT 
gnd -85 -435 1
parse_pin
macroname: DFFPOSX1, pinname: vdd
Port type: INOUT 
vdd -80 385 1
Parsing macro INVX1:  Ports are:
parse_pin
macroname: INVX1, pinname: A
Port type: INPUT 
A -40 -270 1
parse_pin
macroname: INVX1, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: INVX1, pinname: Y
Port type: OUTPUT 
Y 40 0 1
parse_pin
macroname: INVX1, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro INVX2:  Ports are:
parse_pin
macroname: INVX2, pinname: A
Port type: INPUT 
A -40 -170 1
parse_pin
macroname: INVX2, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: INVX2, pinname: Y
Port type: OUTPUT 
Y 40 0 1
parse_pin
macroname: INVX2, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro INVX4:  Ports are:
parse_pin
macroname: INVX4, pinname: A
Port type: INPUT 
A -80 -170 1
parse_pin
macroname: INVX4, pinname: gnd
Port type: INOUT 
gnd 80 -385 1
parse_pin
macroname: INVX4, pinname: Y
Port type: OUTPUT 
Y 0 0 1
parse_pin
macroname: INVX4, pinname: vdd
Port type: INOUT 
vdd 80 285 1
Parsing macro NAND2X1:  Ports are:
parse_pin
macroname: NAND2X1, pinname: A
Port type: INPUT 
A -80 -170 1
parse_pin
macroname: NAND2X1, pinname: B
Port type: INPUT 
B 80 70 1
parse_pin
macroname: NAND2X1, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: NAND2X1, pinname: Y
Port type: OUTPUT 
Y 50 -340 1
parse_pin
macroname: NAND2X1, pinname: vdd
Port type: INOUT 
vdd 80 385 1
Parsing macro NAND3X1:  Ports are:
parse_pin
macroname: NAND3X1, pinname: A
Port type: INPUT 
A -120 30 1
parse_pin
macroname: NAND3X1, pinname: B
Port type: INPUT 
B -20 -50 1
parse_pin
macroname: NAND3X1, pinname: C
Port type: INPUT 
C 40 130 1
parse_pin
macroname: NAND3X1, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: NAND3X1, pinname: Y
Port type: OUTPUT 
Y -40 340 1
parse_pin
macroname: NAND3X1, pinname: vdd
Port type: INOUT 
vdd 40 395 1
Parsing macro NOR2X1:  Ports are:
parse_pin
macroname: NOR2X1, pinname: A
Port type: INPUT 
A -80 -270 1
parse_pin
macroname: NOR2X1, pinname: B
Port type: INPUT 
B 80 -31 1
parse_pin
macroname: NOR2X1, pinname: gnd
Port type: INOUT 
gnd 80 -435 1
parse_pin
macroname: NOR2X1, pinname: Y
Port type: OUTPUT 
Y 0 -150 1
parse_pin
macroname: NOR2X1, pinname: vdd
Port type: INOUT 
vdd 0 499 1
Parsing macro OAI21X1:  Ports are:
parse_pin
macroname: OAI21X1, pinname: A
Port type: INPUT 
A -80 -165 1
parse_pin
macroname: OAI21X1, pinname: B
Port type: INPUT 
B -40 -70 1
parse_pin
macroname: OAI21X1, pinname: C
Port type: INPUT 
C 80 150 1
parse_pin
macroname: OAI21X1, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: OAI21X1, pinname: Y
Port type: OUTPUT 
Y 25 -50 1
parse_pin
macroname: OAI21X1, pinname: vdd
Port type: INOUT 
vdd 89 385 1
Parsing macro OAI22X1:  Ports are:
parse_pin
macroname: OAI22X1, pinname: A
Port type: INPUT 
A -120 -165 1
parse_pin
macroname: OAI22X1, pinname: B
Port type: INPUT 
B -80 -70 1
parse_pin
macroname: OAI22X1, pinname: C
Port type: INPUT 
C 160 -131 1
parse_pin
macroname: OAI22X1, pinname: D
Port type: INPUT 
D 80 -70 1
parse_pin
macroname: OAI22X1, pinname: gnd
Port type: INOUT 
gnd 0 -500 1
parse_pin
macroname: OAI22X1, pinname: Y
Port type: OUTPUT 
Y 0 -150 1
parse_pin
macroname: OAI22X1, pinname: vdd
Port type: INOUT 
vdd 160 285 1
Parsing macro OR2X2:  Ports are:
parse_pin
macroname: OR2X2, pinname: A
Port type: INPUT 
A -120 -270 1
parse_pin
macroname: OR2X2, pinname: B
Port type: INPUT 
B -20 -111 1
parse_pin
macroname: OR2X2, pinname: gnd
Port type: INOUT 
gnd 40 -395 1
parse_pin
macroname: OR2X2, pinname: Y
Port type: OUTPUT 
Y 120 -50 1
parse_pin
macroname: OR2X2, pinname: vdd
Port type: INOUT 
vdd 0 499 1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
Reading FILL macros from LEF file.

decongest.tcl:
Fixed density planning, density = 0.8
Number of cells = 9171, total width = 3066240
Width of fill = 80, total fill cells added = 9582

Done!
No data_selector.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
Read 2200 objects so far...
Read 2250 objects so far...
Read 2300 objects so far...
Read 2350 objects so far...
Read 2400 objects so far...
Read 2450 objects so far...
Read 2500 objects so far...
Read 2550 objects so far...
Read 2600 objects so far...
Read 2650 objects so far...
Read 2700 objects so far...
Read 2750 objects so far...
Read 2800 objects so far...
Read 2850 objects so far...
Read 2900 objects so far...
Read 2950 objects so far...
Read 3000 objects so far...
Read 3050 objects so far...
Read 3100 objects so far...
Read 3150 objects so far...
Read 3200 objects so far...
Read 3250 objects so far...
Read 3300 objects so far...
Read 3350 objects so far...
Read 3400 objects so far...
Read 3450 objects so far...
Read 3500 objects so far...
Read 3550 objects so far...
Read 3600 objects so far...
Read 3650 objects so far...
Read 3700 objects so far...
Read 3750 objects so far...
Read 3800 objects so far...
Read 3850 objects so far...
Read 3900 objects so far...
Read 3950 objects so far...
Read 4000 objects so far...
Read 4050 objects so far...
Read 4100 objects so far...
Read 4150 objects so far...
Read 4200 objects so far...
Read 4250 objects so far...
Read 4300 objects so far...
Read 4350 objects so far...
Read 4400 objects so far...
Read 4450 objects so far...
Read 4500 objects so far...
Read 4550 objects so far...
Read 4600 objects so far...
Read 4650 objects so far...
Read 4700 objects so far...
Read 4750 objects so far...
Read 4800 objects so far...
Read 4850 objects so far...
Read 4900 objects so far...
Read 4950 objects so far...
Read 5000 objects so far...
Read 5050 objects so far...
Read 5100 objects so far...
Read 5150 objects so far...
Read 5200 objects so far...
Read 5250 objects so far...
Read 5300 objects so far...
Read 5350 objects so far...
Read 5400 objects so far...
Read 5450 objects so far...
Read 5500 objects so far...
Read 5550 objects so far...
Read 5600 objects so far...
Read 5650 objects so far...
Read 5700 objects so far...
Read 5750 objects so far...
Read 5800 objects so far...
Read 5850 objects so far...
Read 5900 objects so far...
Read 5950 objects so far...
Read 6000 objects so far...
Read 6050 objects so far...
Read 6100 objects so far...
Read 6150 objects so far...
Read 6200 objects so far...
Read 6250 objects so far...
Read 6300 objects so far...
Read 6350 objects so far...
Read 6400 objects so far...
Read 6450 objects so far...
Read 6500 objects so far...
Read 6550 objects so far...
Read 6600 objects so far...
Read 6650 objects so far...
Read 6700 objects so far...
Read 6750 objects so far...
Read 6800 objects so far...
Read 6850 objects so far...
Read 6900 objects so far...
Read 6950 objects so far...
Read 7000 objects so far...
Read 7050 objects so far...
Read 7100 objects so far...
Read 7150 objects so far...
Read 7200 objects so far...
Read 7250 objects so far...
Read 7300 objects so far...
Read 7350 objects so far...
Read 7400 objects so far...
Read 7450 objects so far...
Read 7500 objects so far...
Read 7550 objects so far...
Read 7600 objects so far...
Read 7650 objects so far...
Read 7700 objects so far...
Read 7750 objects so far...
Read 7800 objects so far...
Read 7850 objects so far...
Read 7900 objects so far...
Read 7950 objects so far...
Read 8000 objects so far...
Read 8050 objects so far...
Read 8100 objects so far...
Read 8150 objects so far...
Read 8200 objects so far...
Read 8250 objects so far...
Read 8300 objects so far...
Read 8350 objects so far...
Read 8400 objects so far...
Read 8450 objects so far...
Read 8500 objects so far...
Read 8550 objects so far...
Read 8600 objects so far...
Read 8650 objects so far...
Read 8700 objects so far...
Read 8750 objects so far...
Read 8800 objects so far...
Read 8850 objects so far...
Read 8900 objects so far...
Read 8950 objects so far...
Read 9000 objects so far...
Read 9050 objects so far...
Read 9100 objects so far...
Read 9150 objects so far...
Read 9200 objects so far...
Read 9250 objects so far...
Read 9300 objects so far...
Read 9350 objects so far...
Read 9400 objects so far...
Read 9450 objects so far...
Read 9500 objects so far...
Read 9550 objects so far...
Read 9600 objects so far...
Read 9650 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
Read 2200 objects so far...
Read 2250 objects so far...
Read 2300 objects so far...
Read 2350 objects so far...
Read 2400 objects so far...
Read 2450 objects so far...
Read 2500 objects so far...
Read 2550 objects so far...
Read 2600 objects so far...
Read 2650 objects so far...
Read 2700 objects so far...
Read 2750 objects so far...
Read 2800 objects so far...
Read 2850 objects so far...
Read 2900 objects so far...
Read 2950 objects so far...
Read 3000 objects so far...
Read 3050 objects so far...
Read 3100 objects so far...
Read 3150 objects so far...
Read 3200 objects so far...
Read 3250 objects so far...
Read 3300 objects so far...
Read 3350 objects so far...
Read 3400 objects so far...
Read 3450 objects so far...
Read 3500 objects so far...
Read 3550 objects so far...
Read 3600 objects so far...
Read 3650 objects so far...
Read 3700 objects so far...
Read 3750 objects so far...
Read 3800 objects so far...
Read 3850 objects so far...
Read 3900 objects so far...
Read 3950 objects so far...
Read 4000 objects so far...
Read 4050 objects so far...
Read 4100 objects so far...
Read 4150 objects so far...
Read 4200 objects so far...
Read 4250 objects so far...
Read 4300 objects so far...
Read 4350 objects so far...
Read 4400 objects so far...
Read 4450 objects so far...
Read 4500 objects so far...
Read 4550 objects so far...
Read 4600 objects so far...
Read 4650 objects so far...
Read 4700 objects so far...
Read 4750 objects so far...
Read 4800 objects so far...
Read 4850 objects so far...
Read 4900 objects so far...
Read 4950 objects so far...
Read 5000 objects so far...
Read 5050 objects so far...
Read 5100 objects so far...
Read 5150 objects so far...
Read 5200 objects so far...
Read 5250 objects so far...
Read 5300 objects so far...
Read 5350 objects so far...
Read 5400 objects so far...
Read 5450 objects so far...
Read 5500 objects so far...
Read 5550 objects so far...
Read 5600 objects so far...
Read 5650 objects so far...
Read 5700 objects so far...
Read 5750 objects so far...
Read 5800 objects so far...
Read 5850 objects so far...
Read 5900 objects so far...
Read 5950 objects so far...
Read 6000 objects so far...
Read 6050 objects so far...
Read 6100 objects so far...
Read 6150 objects so far...
Read 6200 objects so far...
Read 6250 objects so far...
Read 6300 objects so far...
Read 6350 objects so far...
Read 6400 objects so far...
Read 6450 objects so far...
Read 6500 objects so far...
Read 6550 objects so far...
Read 6600 objects so far...
Read 6650 objects so far...
Read 6700 objects so far...
Read 6750 objects so far...
Read 6800 objects so far...
Read 6850 objects so far...
Read 6900 objects so far...
Read 6950 objects so far...
Read 7000 objects so f
----------------------------
Total stdcells     :9171
Total cell width   :4.50e+06
Total cell height  :9.17e+06
Total cell area    :4.50e+09
Total core area    :4.50e+09
Average cell height:1.00e+03

ar...
Read 7050 objects so far...
Read 7100 objects so far...
Read 7150 objects so far...
Read 7200 objects so far...
Read 7250 objects so far...
Read 7300 objects so far...
Read 7350 objects so far...
Read 7400 objects so far...
Read 7450 objects so far...
Read 7500 objects so far...
Read 7550 objects so far...
Read 7600 objects so far...
Read 7650 objects so far...
Read 7700 objects so far...
Read 7750 objects so far...
Read 7800 objects so far...
Read 7850 objects so far...
Read 7900 objects so far...
Read 7950 objects so far...
Read 8000 objects so far...
Read 8050 objects so far...
Read 8100 objects so far...
Read 8150 objects so far...
Read 8200 objects so far...
Read 8250 objects so far...
Read 8300 objects so far...
Read 8350 objects so far...
Read 8400 objects so far...
Read 8450 objects so far...
Read 8500 objects so far...
Read 8550 objects so far...
Read 8600 objects so far...
Read 8650 objects so far...
Read 8700 objects so far...
Read 8750 objects so far...
Read 8800 objects so far...
Read 8850 objects so far...
Read 8900 objects so far...
Read 8950 objects so far...
Read 9000 objects so far...
Read 9050 objects so far...
Read 9100 objects so far...
Read 9150 objects so far...
Read 9200 objects so far...
Read 9250 objects so far...
Read 9300 objects so far...
Read 9350 objects so far...
Read 9400 objects so far...
Read 9450 objects so far...
Read 9500 objects so far...
Read 9550 objects so far...
Read 9600 objects so far...
Read 9650 objects so far...
Splitting data_selector.cel into data_selector.scel and data_selector.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11

  longest Row is:28   Its length is:113680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2782
 tracks = 2762 at attempts =  1000
 tracks = 2745 at attempts =  2000
 tracks = 2728 at attempts =  3000
 tracks = 2721 at attempts =  4000
 tracks = 2712 at attempts =  5000
 tracks = 2698 at attempts =  6000
 tracks = 2693 at attempts =  7000
 tracks = 2688 at attempts =  8000
 tracks = 2684 at attempts =  9000
 tracks = 2682 at attempts = 10000
 tracks = 2674 at attempts = 11000
 tracks = 2674 at attempts = 12000
 tracks = 2669 at attempts = 13000
 tracks = 2665 at attempts = 14000
 tracks = 2663 at attempts = 15000
 tracks = 2661 at attempts = 16000
 tracks = 2658 at attempts = 17000
 tracks = 2657 at attempts = 18000
 tracks = 2655 at attempts = 19000
 tracks = 2653 at attempts = 20000
 tracks = 2653 at attempts = 21000
 tracks = 2650 at attempts = 22000
 tracks = 2649 at attempts = 23000
 tracks = 2645 at attempts = 24000
 tracks = 2644 at attempts = 25000
 tracks = 2642 at attempts = 26000
 tracks = 2641 at attempts = 27000
 tracks = 2641 at attempts = 28000
 tracks = 2639 at attempts = 29000
 tracks = 2638 at attempts = 30000
 tracks = 2638 at attempts = 31000
 tracks = 2636 at attempts = 32000
 tracks = 2636 at attempts = 33000
 tracks = 2636 at attempts = 34000
 tracks = 2636 at attempts = 35000
 tracks = 2636 at attempts = 36000
 tracks = 2635 at attempts = 37000
 tracks = 2635 at attempts = 38000
 tracks = 2634 at attempts = 39000
 tracks = 2634 at attempts = 40000
 tracks = 2634 at attempts = 41000
 tracks = 2634 at attempts = 42000
 tracks = 2634 at attempts = 43000
 tracks = 2634 at attempts = 44000
 tracks = 2632 at attempts = 45000
 tracks = 2632 at attempts = 46000
 tracks = 2632 at attempts = 47000
 tracks = 2632 at attempts = 48000
 tracks = 2632 at attempts = 49000
 tracks = 2632 at attempts = 50000
 tracks = 2632 at attempts = 51000
 tracks = 2632 at attempts = 52000
 tracks = 2629 at attempts = 53000
 tracks = 2629 at attempts = 54000
 tracks = 2628 at attempts = 55000
 tracks = 2628 at attempts = 56000
 tracks = 2628 at attempts = 57000
 tracks = 2628 at attempts = 58000
 tracks = 2627 at attempts = 59000
 tracks = 2627 at attempts = 60000
 tracks = 2627 at attempts = 61000
 tracks = 2627 at attempts = 62000
 tracks = 2627 at attempts = 63000
 tracks = 2627 at attempts = 64000
 tracks = 2626 at attempts = 65000
 tracks = 2626 at attempts = 66000
 tracks = 2626 at attempts = 67000
 tracks = 2626 at attempts = 68000
 tracks = 2626 at attempts = 69000
 tracks = 2626 at attempts = 70000
 tracks = 2626 at attempts = 71000
 tracks = 2626 at attempts = 72000
 tracks = 2626 at attempts = 73000
 tracks = 2626 at attempts = 74000
 tracks = 2626 at attempts = 75000
 tracks = 2625 at attempts = 76000
 tracks = 2625 at attempts = 77000
 tracks = 2625 at attempts = 78000
 tracks = 2625 at attempts = 79000
 tracks = 2625 at attempts = 80000
 tracks = 2625 at attempts = 81000
 tracks = 2625 at attempts = 82000
 tracks = 2625 at attempts = 83000
 tracks = 2625 at attempts = 84000
 tracks = 2625 at attempts = 85000
 tracks = 2625 at attempts = 86000
 tracks = 2625 at attempts = 87000
 tracks = 2625 at attempts = 88000
 tracks = 2625 at attempts = 89000
 tracks = 2625 at attempts = 90000
 tracks = 2625 at attempts = 91000
 tracks = 2625 at attempts = 92000
 tracks = 2625 at attempts = 93000
 tracks = 2625 at attempts = 94000
 tracks = 2625 at attempts = 95000
 tracks = 2625 at attempts = 96000
 tracks = 2625 at attempts = 97000
 tracks = 2625 at attempts = 98000
 tracks = 2625 at attempts = 99000
 tracks = 2625 at attempts = 100000
 tracks = 2625 at attempts = 101000
 tracks = 2625 at attempts = 102000
 tracks = 2625 at attempts = 103000
 tracks = 2625 at attempts = 104000
 tracks = 2625 at attempts = 105000
 tracks = 2625 at attempts = 106000
 tracks = 2625 at attempts = 107000
 tracks = 2624 at attempts = 108000
 tracks = 2624 at attempts = 109000
 tracks = 2624 at attempts = 110000
 tracks = 2624 at attempts = 111000
 tracks = 2624 at attempts = 112000
 tracks = 2624 at attempts = 113000
 tracks = 2624 at attempts = 114000
 tracks = 2624 at attempts = 115000
 tracks = 2624 at attempts = 116000
 tracks = 2624 at attempts = 117000
 tracks = 2624 at attempts = 118000
 tracks = 2624 at attempts = 119000
 tracks = 2624 at attempts = 120000
 tracks = 2624 at attempts = 121000
 tracks = 2624 at attempts = 122000
 tracks = 2624 at attempts = 123000
 tracks = 2624 at attempts = 124000
 tracks = 2624 at attempts = 125000
 tracks = 2624 at attempts = 126000
 tracks = 2624 at attempts = 127000
 tracks = 2624 at attempts = 128000
 tracks = 2624 at attempts = 129000
 tracks = 2624 at attempts = 130000
 tracks = 2624 at attempts = 131000
 tracks = 2624 at attempts = 132000
 tracks = 2624 at attempts = 133000
 tracks = 2624 at attempts = 134000
 tracks = 2624 at attempts = 135000
 tracks = 2624 at attempts = 136000
 tracks = 2624 at attempts = 137000
 tracks = 2624 at attempts = 138000
 tracks = 2624 at attempts = 139000
 tracks = 2624 at attempts = 140000
 tracks = 2624 at attempts = 141000
 tracks = 2624 at attempts = 142000
 tracks = 2624 at attempts = 143000
 tracks = 2624 at attempts = 144000
 tracks = 2624 at attempts = 145000
 tracks = 2624 at attempts = 146000
 tracks = 2624 at attempts = 147000
 tracks = 2624 at attempts = 148000
 tracks = 2624 at attempts = 149000
 tracks = 2624 at attempts = 150000
 tracks = 2624 at attempts = 151000
 tracks = 2624 at attempts = 152000
 tracks = 2624 at attempts = 153000
 tracks = 2624 at attempts = 154000
 tracks = 2624 at attempts = 155000
 tracks = 2624 at attempts = 156000
 tracks = 2624 at attempts = 157000
 tracks = 2624 at attempts = 158000
 tracks = 2624 at attempts = 159000
 tracks = 2624 at attempts = 160000
 tracks = 2624 at attempts = 161000
 tracks = 2624 at attempts = 162000
 tracks = 2624 at attempts = 163000
 tracks = 2624 at attempts = 164000
 tracks = 2624 at attempts = 165000
 tracks = 2624 at attempts = 166000
 tracks = 2624 at attempts = 167000
 tracks = 2624 at attempts = 168000
 tracks = 2624 at attempts = 169000
 tracks = 2624 at attempts = 170000
 tracks = 2624 at attempts = 171000
 tracks = 2624 at attempts = 172000
 tracks = 2624 at attempts = 173000
 tracks = 2624 at attempts = 174000
 tracks = 2624 at attempts = 175000
 tracks = 2624 at attempts = 176000
 tracks = 2624 at attempts = 177000
 tracks = 2624 at attempts = 178000
 tracks = 2624 at attempts = 179000
 tracks = 2624 at attempts = 180000
 tracks = 2624 at attempts = 181000
 tracks = 2624 at attempts = 182000
 tracks = 2624 at attempts = 183000
 tracks = 2624 at attempts = 184000
 tracks = 2624 at attempts = 185000
 tracks = 2624 at attempts = 186000
 tracks = 2624 at attempts = 187000
 tracks = 2624 at attempts = 188000
 tracks = 2624 at attempts = 189000
 tracks = 2624 at attempts = 190000
 tracks = 2624 at attempts = 191000
 tracks = 2624 at attempts = 192000
 tracks = 2624 at attempts = 193000
 tracks = 2624 at attempts = 194000
 tracks = 2624 at attempts = 195000
 tracks = 2624 at attempts = 196000
 tracks = 2624 at attempts = 197000
 tracks = 2624 at attempts = 198000
 tracks = 2624 at attempts = 199000
 tracks = 2624 at attempts = 200000
 tracks = 2624 at attempts = 201000
 tracks = 2624 at attempts = 202000
 tracks = 2624 at attempts = 203000
 tracks = 2624 at attempts = 204000
 tracks = 2624 at attempts = 205000
 tracks = 2624 at attempts = 206000
 tracks = 2624 at attempts = 207000
 tracks = 2624 at attempts = 208000
 tracks = 2624 at attempts = 209000
 tracks = 2624 at attempts = 210000
 tracks = 2624 at attempts = 211000
 tracks = 2624 at attempts = 212000
 tracks = 2624 at attempts = 213000
 tracks = 2624 at attempts = 214000
 tracks = 2624 at attempts = 215000
 tracks = 2624 at attempts = 216000
 tracks = 2624 at attempts = 217000
 tracks = 2624 at attempts = 218000
 tracks = 2624 at attempts = 219000
 tracks = 2624 at attempts = 220000
 tracks = 2624 at attempts = 221000
 tracks = 2624 at attempts = 222000
 tracks = 2624 at attempts = 223000
 tracks = 2624 at attempts = 224000
 tracks = 2624 at attempts = 225000
 tracks = 2624 at attempts = 226000
 tracks = 2624 at attempts = 227000
 tracks = 2624 at attempts = 228000
 tracks = 2624 at attempts = 229000
 tracks = 2624 at attempts = 230000
 tracks = 2624 at attempts = 231000
 tracks = 2624 at attempts = 232000
 tracks = 2624 at attempts = 233000
 tracks = 2624 at attempts = 234000
 tracks = 2624 at attempts = 235000
 tracks = 2624 at attempts = 236000
 tracks = 2624 at attempts = 237000
 tracks = 2624 at attempts = 238000
 tracks = 2624 at attempts = 239000
 tracks = 2624 at attempts = 240000
 tracks = 2624 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11
 ITERATION 12
 ITERATION 13

  longest Row is:28   Its length is:113760
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2794
 tracks = 2772 at attempts =  1000
 tracks = 2761 at attempts =  2000
 tracks = 2746 at attempts =  3000
 tracks = 2729 at attempts =  4000
 tracks = 2720 at attempts =  5000
 tracks = 2713 at attempts =  6000
 tracks = 2711 at attempts =  7000
 tracks = 2708 at attempts =  8000
 tracks = 2705 at attempts =  9000
 tracks = 2697 at attempts = 10000
 tracks = 2692 at attempts = 11000
 tracks = 2688 at attempts = 12000
 tracks = 2684 at attempts = 13000
 tracks = 2680 at attempts = 14000
 tracks = 2675 at attempts = 15000
 tracks = 2671 at attempts = 16000
 tracks = 2669 at attempts = 17000
 tracks = 2669 at attempts = 18000
 tracks = 2667 at attempts = 19000
 tracks = 2663 at attempts = 20000
 tracks = 2663 at attempts = 21000
 tracks = 2661 at attempts = 22000
 tracks = 2659 at attempts = 23000
 tracks = 2658 at attempts = 24000
 tracks = 2656 at attempts = 25000
 tracks = 2655 at attempts = 26000
 tracks = 2654 at attempts = 27000
 tracks = 2654 at attempts = 28000
 tracks = 2654 at attempts = 29000
 tracks = 2653 at attempts = 30000
 tracks = 2652 at attempts = 31000
 tracks = 2651 at attempts = 32000
 tracks = 2651 at attempts = 33000
 tracks = 2650 at attempts = 34000
 tracks = 2650 at attempts = 35000
 tracks = 2650 at attempts = 36000
 tracks = 2650 at attempts = 37000
 tracks = 2650 at attempts = 38000
 tracks = 2649 at attempts = 39000
 tracks = 2649 at attempts = 40000
 tracks = 2649 at attempts = 41000
 tracks = 2649 at attempts = 42000
 tracks = 2649 at attempts = 43000
 tracks = 2649 at attempts = 44000
 tracks = 2648 at attempts = 45000
 tracks = 2648 at attempts = 46000
 tracks = 2648 at attempts = 47000
 tracks = 2648 at attempts = 48000
 tracks = 2648 at attempts = 49000
 tracks = 2648 at attempts = 50000
 tracks = 2648 at attempts = 51000
 tracks = 2648 at attempts = 52000
 tracks = 2647 at attempts = 53000
 tracks = 2647 at attempts = 54000
 tracks = 2647 at attempts = 55000
 tracks = 2647 at attempts = 56000
 tracks = 2647 at attempts = 57000
 tracks = 2647 at attempts = 58000
 tracks = 2647 at attempts = 59000
 tracks = 2647 at attempts = 60000
 tracks = 2647 at attempts = 61000
 tracks = 2647 at attempts = 62000
 tracks = 2647 at attempts = 63000
 tracks = 2647 at attempts = 64000
 tracks = 2647 at attempts = 65000
 tracks = 2647 at attempts = 66000
 tracks = 2647 at attempts = 67000
 tracks = 2647 at attempts = 68000
 tracks = 2647 at attempts = 69000
 tracks = 2647 at attempts = 70000
 tracks = 2647 at attempts = 71000
 tracks = 2647 at attempts = 72000
 tracks = 2647 at attempts = 73000
 tracks = 2647 at attempts = 74000
 tracks = 2647 at attempts = 75000
 tracks = 2647 at attempts = 76000
 tracks = 2647 at attempts = 77000
 tracks = 2646 at attempts = 78000
 tracks = 2646 at attempts = 79000
 tracks = 2646 at attempts = 80000
 tracks = 2646 at attempts = 81000
 tracks = 2646 at attempts = 82000
 tracks = 2646 at attempts = 83000
 tracks = 2646 at attempts = 84000
 tracks = 2646 at attempts = 85000
 tracks = 2646 at attempts = 86000
 tracks = 2646 at attempts = 87000
 tracks = 2646 at attempts = 88000
 tracks = 2646 at attempts = 89000
 tracks = 2646 at attempts = 90000
 tracks = 2646 at attempts = 91000
 tracks = 2646 at attempts = 92000
 tracks = 2646 at attempts = 93000
 tracks = 2646 at attempts = 94000
 tracks = 2646 at attempts = 95000
 tracks = 2646 at attempts = 96000
 tracks = 2646 at attempts = 97000
 tracks = 2646 at attempts = 98000
 tracks = 2646 at attempts = 99000
 tracks = 2646 at attempts = 100000
 tracks = 2646 at attempts = 101000
 tracks = 2646 at attempts = 102000
 tracks = 2646 at attempts = 103000
 tracks = 2646 at attempts = 104000
 tracks = 2646 at attempts = 105000
 tracks = 2646 at attempts = 106000
 tracks = 2646 at attempts = 107000
 tracks = 2646 at attempts = 108000
 tracks = 2646 at attempts = 109000
 tracks = 2646 at attempts = 110000
 tracks = 2646 at attempts = 111000
 tracks = 2646 at attempts = 112000
 tracks = 2646 at attempts = 113000
 tracks = 2646 at attempts = 114000
 tracks = 2646 at attempts = 115000
 tracks = 2646 at attempts = 116000
 tracks = 2646 at attempts = 117000
 tracks = 2646 at attempts = 118000
 tracks = 2646 at attempts = 119000
 tracks = 2646 at attempts = 120000
 tracks = 2646 at attempts = 121000
 tracks = 2646 at attempts = 122000
 tracks = 2646 at attempts = 123000
 tracks = 2646 at attempts = 124000
 tracks = 2646 at attempts = 125000
 tracks = 2646 at attempts = 126000
 tracks = 2646 at attempts = 127000
 tracks = 2646 at attempts = 128000
 tracks = 2646 at attempts = 129000
 tracks = 2646 at attempts = 130000
 tracks = 2646 at attempts = 131000
 tracks = 2646 at attempts = 132000
 tracks = 2646 at attempts = 133000
 tracks = 2646 at attempts = 134000
 tracks = 2646 at attempts = 135000
 tracks = 2646 at attempts = 136000
 tracks = 2646 at attempts = 137000
 tracks = 2646 at attempts = 138000
 tracks = 2646 at attempts = 139000
 tracks = 2646 at attempts = 140000
 tracks = 2646 at attempts = 141000
 tracks = 2646 at attempts = 142000
 tracks = 2646 at attempts = 143000
 tracks = 2646 at attempts = 144000
 tracks = 2646 at attempts = 145000
 tracks = 2646 at attempts = 146000
 tracks = 2646 at attempts = 147000
 tracks = 2646 at attempts = 148000
 tracks = 2646 at attempts = 149000
 tracks = 2646 at attempts = 150000
 tracks = 2646 at attempts = 151000
 tracks = 2645 at attempts = 152000
 tracks = 2645 at attempts = 153000
 tracks = 2645 at attempts = 154000
 tracks = 2645 at attempts = 155000
 tracks = 2645 at attempts = 156000
 tracks = 2645 at attempts = 157000
 tracks = 2645 at attempts = 158000
 tracks = 2645 at attempts = 159000
 tracks = 2645 at attempts = 160000
 tracks = 2645 at attempts = 161000
 tracks = 2645 at attempts = 162000
 tracks = 2645 at attempts = 163000
 tracks = 2645 at attempts = 164000
 tracks = 2645 at attempts = 165000
 tracks = 2645 at attempts = 166000
 tracks = 2645 at attempts = 167000
 tracks = 2645 at attempts = 168000
 tracks = 2645 at attempts = 169000
 tracks = 2645 at attempts = 170000
 tracks = 2645 at attempts = 171000
 tracks = 2645 at attempts = 172000
 tracks = 2645 at attempts = 173000
 tracks = 2645 at attempts = 174000
 tracks = 2645 at attempts = 175000
 tracks = 2645 at attempts = 176000
 tracks = 2645 at attempts = 177000
 tracks = 2645 at attempts = 178000
 tracks = 2645 at attempts = 179000
 tracks = 2645 at attempts = 180000
 tracks = 2645 at attempts = 181000
 tracks = 2645 at attempts = 182000
 tracks = 2645 at attempts = 183000
 tracks = 2645 at attempts = 184000
 tracks = 2645 at attempts = 185000
 tracks = 2645 at attempts = 186000
 tracks = 2645 at attempts = 187000
 tracks = 2645 at attempts = 188000
 tracks = 2645 at attempts = 189000
 tracks = 2645 at attempts = 190000
 tracks = 2645 at attempts = 191000
 tracks = 2645 at attempts = 192000
 tracks = 2645 at attempts = 193000
 tracks = 2645 at attempts = 194000
 tracks = 2645 at attempts = 195000
 tracks = 2645 at attempts = 196000
 tracks = 2645 at attempts = 197000
 tracks = 2645 at attempts = 198000
 tracks = 2645 at attempts = 199000
 tracks = 2645 at attempts = 200000
 tracks = 2645 at attempts = 201000
 tracks = 2645 at attempts = 202000
 tracks = 2645 at attempts = 203000
 tracks = 2645 at attempts = 204000
 tracks = 2645 at attempts = 205000
 tracks = 2645 at attempts = 206000
 tracks = 2645 at attempts = 207000
 tracks = 2645 at attempts = 208000
 tracks = 2645 at attempts = 209000
 tracks = 2645 at attempts = 210000
 tracks = 2645 at attempts = 211000
 tracks = 2645 at attempts = 212000
 tracks = 2645 at attempts = 213000
 tracks = 2645 at attempts = 214000
 tracks = 2645 at attempts = 215000
 tracks = 2645 at attempts = 216000
 tracks = 2645 at attempts = 217000
 tracks = 2645 at attempts = 218000
 tracks = 2645 at attempts = 219000
 tracks = 2645 at attempts = 220000
 tracks = 2645 at attempts = 221000
 tracks = 2645 at attempts = 222000
 tracks = 2645 at attempts = 223000
 tracks = 2645 at attempts = 224000
 tracks = 2645 at attempts = 225000
 tracks = 2645 at attempts = 226000
 tracks = 2645 at attempts = 227000
 tracks = 2645 at attempts = 228000
 tracks = 2645 at attempts = 229000
 tracks = 2645 at attempts = 230000
 tracks = 2645 at attempts = 231000
 tracks = 2645 at attempts = 232000
 tracks = 2645 at attempts = 233000
 tracks = 2645 at attempts = 234000
 tracks = 2645 at attempts = 235000
 tracks = 2645 at attempts = 236000
 tracks = 2645 at attempts = 237000
 tracks = 2645 at attempts = 238000
 tracks = 2645 at attempts = 239000
 tracks = 2645 at attempts = 240000
 tracks = 2645 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11
 ITERATION 12
 ITERATION 13
 ITERATION 14
 ITERATION 15
 ITERATION 16
 ITERATION 17
 ITERATION 18
 ITERATION 19
 ITERATION 20

  longest Row is:28   Its length is:114080
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2803
 tracks = 2775 at attempts =  1000
 tracks = 2752 at attempts =  2000
 tracks = 2736 at attempts =  3000
 tracks = 2727 at attempts =  4000
 tracks = 2720 at attempts =  5000
 tracks = 2715 at attempts =  6000
 tracks = 2702 at attempts =  7000
 tracks = 2694 at attempts =  8000
 tracks = 2692 at attempts =  9000
 tracks = 2687 at attempts = 10000
 tracks = 2685 at attempts = 11000
 tracks = 2683 at attempts = 12000
 tracks = 2679 at attempts = 13000
 tracks = 2673 at attempts = 14000
 tracks = 2669 at attempts = 15000
 tracks = 2669 at attempts = 16000
 tracks = 2667 at attempts = 17000
 tracks = 2667 at attempts = 18000
 tracks = 2665 at attempts = 19000
 tracks = 2663 at attempts = 20000
 tracks = 2662 at attempts = 21000
 tracks = 2660 at attempts = 22000
 tracks = 2660 at attempts = 23000
 tracks = 2658 at attempts = 24000
 tracks = 2656 at attempts = 25000
 tracks = 2656 at attempts = 26000
 tracks = 2655 at attempts = 27000
 tracks = 2654 at attempts = 28000
 tracks = 2652 at attempts = 29000
 tracks = 2650 at attempts = 30000
 tracks = 2650 at attempts = 31000
 tracks = 2648 at attempts = 32000
 tracks = 2644 at attempts = 33000
 tracks = 2643 at attempts = 34000
 tracks = 2643 at attempts = 35000
 tracks = 2643 at attempts = 36000
 tracks = 2643 at attempts = 37000
 tracks = 2643 at attempts = 38000
 tracks = 2642 at attempts = 39000
 tracks = 2642 at attempts = 40000
 tracks = 2642 at attempts = 41000
 tracks = 2642 at attempts = 42000
 tracks = 2642 at attempts = 43000
 tracks = 2641 at attempts = 44000
 tracks = 2641 at attempts = 45000
 tracks = 2641 at attempts = 46000
 tracks = 2641 at attempts = 47000
 tracks = 2641 at attempts = 48000
 tracks = 2641 at attempts = 49000
 tracks = 2641 at attempts = 50000
 tracks = 2640 at attempts = 51000
 tracks = 2640 at attempts = 52000
 tracks = 2640 at attempts = 53000
 tracks = 2638 at attempts = 54000
 tracks = 2637 at attempts = 55000
 tracks = 2637 at attempts = 56000
 tracks = 2637 at attempts = 57000
 tracks = 2637 at attempts = 58000
 tracks = 2637 at attempts = 59000
 tracks = 2637 at attempts = 60000
 tracks = 2637 at attempts = 61000
 tracks = 2636 at attempts = 62000
 tracks = 2636 at attempts = 63000
 tracks = 2636 at attempts = 64000
 tracks = 2636 at attempts = 65000
 tracks = 2636 at attempts = 66000
 tracks = 2636 at attempts = 67000
 tracks = 2636 at attempts = 68000
 tracks = 2636 at attempts = 69000
 tracks = 2636 at attempts = 70000
 tracks = 2636 at attempts = 71000
 tracks = 2636 at attempts = 72000
 tracks = 2636 at attempts = 73000
 tracks = 2636 at attempts = 74000
 tracks = 2636 at attempts = 75000
 tracks = 2636 at attempts = 76000
 tracks = 2636 at attempts = 77000
 tracks = 2636 at attempts = 78000
 tracks = 2636 at attempts = 79000
 tracks = 2636 at attempts = 80000
 tracks = 2636 at attempts = 81000
 tracks = 2636 at attempts = 82000
 tracks = 2636 at attempts = 83000
 tracks = 2636 at attempts = 84000
 tracks = 2636 at attempts = 85000
 tracks = 2636 at attempts = 86000
 tracks = 2636 at attempts = 87000
 tracks = 2636 at attempts = 88000
 tracks = 2636 at attempts = 89000
 tracks = 2636 at attempts = 90000
 tracks = 2636 at attempts = 91000
 tracks = 2636 at attempts = 92000
 tracks = 2636 at attempts = 93000
 tracks = 2636 at attempts = 94000
 tracks = 2636 at attempts = 95000
 tracks = 2636 at attempts = 96000
 tracks = 2636 at attempts = 97000
 tracks = 2636 at attempts = 98000
 tracks = 2636 at attempts = 99000
 tracks = 2636 at attempts = 100000
 tracks = 2636 at attempts = 101000
 tracks = 2636 at attempts = 102000
 tracks = 2636 at attempts = 103000
 tracks = 2636 at attempts = 104000
 tracks = 2636 at attempts = 105000
 tracks = 2636 at attempts = 106000
 tracks = 2636 at attempts = 107000
 tracks = 2636 at attempts = 108000
 tracks = 2636 at attempts = 109000
 tracks = 2636 at attempts = 110000
 tracks = 2636 at attempts = 111000
 tracks = 2636 at attempts = 112000
 tracks = 2636 at attempts = 113000
 tracks = 2636 at attempts = 114000
 tracks = 2636 at attempts = 115000
 tracks = 2636 at attempts = 116000
 tracks = 2636 at attempts = 117000
 tracks = 2636 at attempts = 118000
 tracks = 2636 at attempts = 119000
 tracks = 2636 at attempts = 120000
 tracks = 2636 at attempts = 121000
 tracks = 2636 at attempts = 122000
 tracks = 2636 at attempts = 123000
 tracks = 2636 at attempts = 124000
 tracks = 2636 at attempts = 125000
 tracks = 2636 at attempts = 126000
 tracks = 2636 at attempts = 127000
 tracks = 2636 at attempts = 128000
 tracks = 2636 at attempts = 129000
 tracks = 2636 at attempts = 130000
 tracks = 2636 at attempts = 131000
 tracks = 2636 at attempts = 132000
 tracks = 2636 at attempts = 133000
 tracks = 2636 at attempts = 134000
 tracks = 2636 at attempts = 135000
 tracks = 2636 at attempts = 136000
 tracks = 2636 at attempts = 137000
 tracks = 2636 at attempts = 138000
 tracks = 2636 at attempts = 139000
 tracks = 2636 at attempts = 140000
 tracks = 2636 at attempts = 141000
 tracks = 2636 at attempts = 142000
 tracks = 2636 at attempts = 143000
 tracks = 2636 at attempts = 144000
 tracks = 2636 at attempts = 145000
 tracks = 2636 at attempts = 146000
 tracks = 2636 at attempts = 147000
 tracks = 2636 at attempts = 148000
 tracks = 2636 at attempts = 149000
 tracks = 2636 at attempts = 150000
 tracks = 2636 at attempts = 151000
 tracks = 2636 at attempts = 152000
 tracks = 2636 at attempts = 153000
 tracks = 2636 at attempts = 154000
 tracks = 2636 at attempts = 155000
 tracks = 2636 at attempts = 156000
 tracks = 2636 at attempts = 157000
 tracks = 2636 at attempts = 158000
 tracks = 2636 at attempts = 159000
 tracks = 2636 at attempts = 160000
 tracks = 2636 at attempts = 161000
 tracks = 2636 at attempts = 162000
 tracks = 2636 at attempts = 163000
 tracks = 2636 at attempts = 164000
 tracks = 2636 at attempts = 165000
 tracks = 2636 at attempts = 166000
 tracks = 2636 at attempts = 167000
 tracks = 2636 at attempts = 168000
 tracks = 2636 at attempts = 169000
 tracks = 2636 at attempts = 170000
 tracks = 2636 at attempts = 171000
 tracks = 2636 at attempts = 172000
 tracks = 2636 at attempts = 173000
 tracks = 2636 at attempts = 174000
 tracks = 2636 at attempts = 175000
 tracks = 2636 at attempts = 176000
 tracks = 2636 at attempts = 177000
 tracks = 2636 at attempts = 178000
 tracks = 2636 at attempts = 179000
 tracks = 2636 at attempts = 180000
 tracks = 2636 at attempts = 181000
 tracks = 2636 at attempts = 182000
 tracks = 2636 at attempts = 183000
 tracks = 2636 at attempts = 184000
 tracks = 2636 at attempts = 185000
 tracks = 2636 at attempts = 186000
 tracks = 2636 at attempts = 187000
 tracks = 2636 at attempts = 188000
 tracks = 2636 at attempts = 189000
 tracks = 2636 at attempts = 190000
 tracks = 2636 at attempts = 191000
 tracks = 2636 at attempts = 192000
 tracks = 2636 at attempts = 193000
 tracks = 2636 at attempts = 194000
 tracks = 2636 at attempts = 195000
 tracks = 2636 at attempts = 196000
 tracks = 2636 at attempts = 197000
 tracks = 2636 at attempts = 198000
 tracks = 2636 at attempts = 199000
 tracks = 2636 at attempts = 200000
 tracks = 2636 at attempts = 201000
 tracks = 2636 at attempts = 202000
 tracks = 2636 at attempts = 203000
 tracks = 2636 at attempts = 204000
 tracks = 2636 at attempts = 205000
 tracks = 2636 at attempts = 206000
 tracks = 2636 at attempts = 207000
 tracks = 2636 at attempts = 208000
 tracks = 2636 at attempts = 209000
 tracks = 2636 at attempts = 210000
 tracks = 2636 at attempts = 211000
 tracks = 2636 at attempts = 212000
 tracks = 2636 at attempts = 213000
 tracks = 2636 at attempts = 214000
 tracks = 2636 at attempts = 215000
 tracks = 2636 at attempts = 216000
 tracks = 2636 at attempts = 217000
 tracks = 2636 at attempts = 218000
 tracks = 2636 at attempts = 219000
 tracks = 2636 at attempts = 220000
 tracks = 2636 at attempts = 221000
 tracks = 2636 at attempts = 222000
 tracks = 2636 at attempts = 223000
 tracks = 2636 at attempts = 224000
 tracks = 2636 at attempts = 225000
 tracks = 2636 at attempts = 226000
 tracks = 2636 at attempts = 227000
 tracks = 2636 at attempts = 228000
 tracks = 2636 at attempts = 229000
 tracks = 2636 at attempts = 230000
 tracks = 2636 at attempts = 231000
 tracks = 2636 at attempts = 232000
 tracks = 2636 at attempts = 233000
 tracks = 2636 at attempts = 234000
 tracks = 2636 at attempts = 235000
 tracks = 2636 at attempts = 236000
 tracks = 2636 at attempts = 237000
 tracks = 2636 at attempts = 238000
 tracks = 2636 at attempts = 239000
 tracks = 2636 at attempts = 240000
 tracks = 2636 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2

  longest Row is:22   Its length is:105680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2714
 tracks = 2713 at attempts =  1000
 tracks = 2712 at attempts =  2000
 tracks = 2709 at attempts =  3000
 tracks = 2709 at attempts =  4000
 tracks = 2708 at attempts =  5000
 tracks = 2708 at attempts =  6000
 tracks = 2708 at attempts =  7000
 tracks = 2708 at attempts =  8000
 tracks = 2707 at attempts =  9000
 tracks = 2707 at attempts = 10000
 tracks = 2707 at attempts = 11000
 tracks = 2707 at attempts = 12000
 tracks = 2707 at attempts = 13000
 tracks = 2707 at attempts = 14000
 tracks = 2707 at attempts = 15000
 tracks = 2707 at attempts = 16000
 tracks = 2707 at attempts = 17000
 tracks = 2707 at attempts = 18000
 tracks = 2707 at attempts = 19000
 tracks = 2707 at attempts = 20000
 tracks = 2707 at attempts = 21000
 tracks = 2707 at attempts = 22000
 tracks = 2707 at attempts = 23000
 tracks = 2707 at attempts = 24000
 tracks = 2707 at attempts = 25000
 tracks = 2707 at attempts = 26000
 tracks = 2707 at attempts = 27000
 tracks = 2707 at attempts = 28000
 tracks = 2707 at attempts = 29000
 tracks = 2707 at attempts = 30000
 tracks = 2707 at attempts = 31000
 tracks = 2707 at attempts = 32000
 tracks = 2707 at attempts = 33000
 tracks = 2707 at attempts = 34000
 tracks = 2707 at attempts = 35000
 tracks = 2707 at attempts = 36000
 tracks = 2707 at attempts = 37000
 tracks = 2707 at attempts = 38000
 tracks = 2707 at attempts = 39000
 tracks = 2707 at attempts = 40000
 tracks = 2707 at attempts = 41000
 tracks = 2707 at attempts = 42000
 tracks = 2707 at attempts = 43000
 tracks = 2707 at attempts = 44000
 tracks = 2707 at attempts = 45000
 tracks = 2707 at attempts = 46000
 tracks = 2707 at attempts = 47000
 tracks = 2707 at attempts = 48000
 tracks = 2707 at attempts = 49000
 tracks = 2707 at attempts = 50000
 tracks = 2707 at attempts = 51000
 tracks = 2707 at attempts = 52000
 tracks = 2707 at attempts = 53000
 tracks = 2707 at attempts = 54000
 tracks = 2707 at attempts = 55000
 tracks = 2707 at attempts = 56000
 tracks = 2707 at attempts = 57000
 tracks = 2707 at attempts = 58000
 tracks = 2707 at attempts = 59000
 tracks = 2707 at attempts = 60000
 tracks = 2707 at attempts = 61000
 tracks = 2707 at attempts = 62000
 tracks = 2707 at attempts = 63000
 tracks = 2707 at attempts = 64000
 tracks = 2707 at attempts = 65000
 tracks = 2707 at attempts = 66000
 tracks = 2707 at attempts = 67000
 tracks = 2707 at attempts = 68000
 tracks = 2707 at attempts = 69000
 tracks = 2707 at attempts = 70000
 tracks = 2707 at attempts = 71000
 tracks = 2707 at attempts = 72000
 tracks = 2707 at attempts = 73000
 tracks = 2707 at attempts = 74000
 tracks = 2707 at attempts = 75000
 tracks = 2707 at attempts = 76000
 tracks = 2707 at attempts = 77000
 tracks = 2707 at attempts = 78000
 tracks = 2707 at attempts = 79000
 tracks = 2707 at attempts = 80000
 tracks = 2707 at attempts = 81000
 tracks = 2707 at attempts = 82000
 tracks = 2707 at attempts = 83000
 tracks = 2707 at attempts = 84000
 tracks = 2707 at attempts = 85000
 tracks = 2707 at attempts = 86000
 tracks = 2707 at attempts = 87000
 tracks = 2707 at attempts = 88000
 tracks = 2707 at attempts = 89000
 tracks = 2707 at attempts = 90000
 tracks = 2707 at attempts = 91000
 tracks = 2707 at attempts = 92000
 tracks = 2707 at attempts = 93000
 tracks = 2707 at attempts = 94000
 tracks = 2707 at attempts = 95000
 tracks = 2707 at attempts = 96000
 tracks = 2707 at attempts = 97000
 tracks = 2707 at attempts = 98000
 tracks = 2707 at attempts = 99000
 tracks = 2707 at attempts = 100000
 tracks = 2707 at attempts = 101000
 tracks = 2707 at attempts = 102000
 tracks = 2707 at attempts = 103000
 tracks = 2707 at attempts = 104000
 tracks = 2707 at attempts = 105000
 tracks = 2707 at attempts = 106000
 tracks = 2707 at attempts = 107000
 tracks = 2707 at attempts = 108000
 tracks = 2707 at attempts = 109000
 tracks = 2707 at attempts = 110000
 tracks = 2707 at attempts = 111000
 tracks = 2707 at attempts = 112000
 tracks = 2707 at attempts = 113000
 tracks = 2707 at attempts = 114000
 tracks = 2707 at attempts = 115000
 tracks = 2707 at attempts = 116000
 tracks = 2707 at attempts = 117000
 tracks = 2707 at attempts = 118000
 tracks = 2707 at attempts = 119000
 tracks = 2707 at attempts = 120000
 tracks = 2707 at attempts = 121000
 tracks = 2707 at attempts = 122000
 tracks = 2707 at attempts = 123000
 tracks = 2707 at attempts = 124000
 tracks = 2707 at attempts = 125000
 tracks = 2707 at attempts = 126000
 tracks = 2707 at attempts = 127000
 tracks = 2707 at attempts = 128000
 tracks = 2707 at attempts = 129000
 tracks = 2707 at attempts = 130000
 tracks = 2707 at attempts = 131000
 tracks = 2707 at attempts = 132000
 tracks = 2707 at attempts = 133000
 tracks = 2707 at attempts = 134000
 tracks = 2707 at attempts = 135000
 tracks = 2707 at attempts = 136000
 tracks = 2707 at attempts = 137000
 tracks = 2707 at attempts = 138000
 tracks = 2707 at attempts = 139000
 tracks = 2707 at attempts = 140000
 tracks = 2707 at attempts = 141000
 tracks = 2707 at attempts = 142000
 tracks = 2707 at attempts = 143000
 tracks = 2707 at attempts = 144000
 tracks = 2707 at attempts = 145000
 tracks = 2707 at attempts = 146000
 tracks = 2707 at attempts = 147000
 tracks = 2707 at attempts = 148000
 tracks = 2707 at attempts = 149000
 tracks = 2707 at attempts = 150000
 tracks = 2707 at attempts = 151000
 tracks = 2707 at attempts = 152000
 tracks = 2707 at attempts = 153000
 tracks = 2707 at attempts = 154000
 tracks = 2707 at attempts = 155000
 tracks = 2707 at attempts = 156000
 tracks = 2707 at attempts = 157000
 tracks = 2707 at attempts = 158000
 tracks = 2707 at attempts = 159000
 tracks = 2707 at attempts = 160000
 tracks = 2707 at attempts = 161000
 tracks = 2707 at attempts = 162000
 tracks = 2707 at attempts = 163000
 tracks = 2707 at attempts = 164000
 tracks = 2707 at attempts = 165000
 tracks = 2707 at attempts = 166000
 tracks = 2707 at attempts = 167000
 tracks = 2707 at attempts = 168000
 tracks = 2707 at attempts = 169000
 tracks = 2707 at attempts = 170000
 tracks = 2707 at attempts = 171000
 tracks = 2707 at attempts = 172000
 tracks = 2707 at attempts = 173000
 tracks = 2707 at attempts = 174000
 tracks = 2707 at attempts = 175000
 tracks = 2707 at attempts = 176000
 tracks = 2707 at attempts = 177000
 tracks = 2707 at attempts = 178000
 tracks = 2707 at attempts = 179000
 tracks = 2707 at attempts = 180000
 tracks = 2707 at attempts = 181000
 tracks = 2707 at attempts = 182000
 tracks = 2707 at attempts = 183000
 tracks = 2707 at attempts = 184000
 tracks = 2707 at attempts = 185000
 tracks = 2707 at attempts = 186000
 tracks = 2707 at attempts = 187000
 tracks = 2707 at attempts = 188000
 tracks = 2707 at attempts = 189000
 tracks = 2707 at attempts = 190000
 tracks = 2707 at attempts = 191000
 tracks = 2707 at attempts = 192000
 tracks = 2707 at attempts = 193000
 tracks = 2707 at attempts = 194000
 tracks = 2707 at attempts = 195000
 tracks = 2707 at attempts = 196000
 tracks = 2707 at attempts = 197000
 tracks = 2707 at attempts = 198000
 tracks = 2707 at attempts = 199000
 tracks = 2707 at attempts = 200000
 tracks = 2707 at attempts = 201000
 tracks = 2707 at attempts = 202000
 tracks = 2707 at attempts = 203000
 tracks = 2707 at attempts = 204000
 tracks = 2707 at attempts = 205000
 tracks = 2707 at attempts = 206000
 tracks = 2707 at attempts = 207000
 tracks = 2707 at attempts = 208000
 tracks = 2707 at attempts = 209000
 tracks = 2707 at attempts = 210000
 tracks = 2707 at attempts = 211000
 tracks = 2707 at attempts = 212000
 tracks = 2707 at attempts = 213000
 tracks = 2707 at attempts = 214000
 tracks = 2707 at attempts = 215000
 tracks = 2707 at attempts = 216000
 tracks = 2707 at attempts = 217000
 tracks = 2707 at attempts = 218000
 tracks = 2707 at attempts = 219000
 tracks = 2707 at attempts = 220000
 tracks = 2707 at attempts = 221000
 tracks = 2707 at attempts = 222000
 tracks = 2707 at attempts = 223000
 tracks = 2707 at attempts = 224000
 tracks = 2707 at attempts = 225000
 tracks = 2707 at attempts = 226000
 tracks = 2707 at attempts = 227000
 tracks = 2707 at attempts = 228000
 tracks = 2707 at attempts = 229000
 tracks = 2707 at attempts = 230000
 tracks = 2707 at attempts = 231000
 tracks = 2707 at attempts = 232000
 tracks = 2707 at attempts = 233000
 tracks = 2707 at attempts = 234000
 tracks = 2707 at attempts = 235000
 tracks = 2707 at attempts = 236000
 tracks = 2707 at attempts = 237000
 tracks = 2707 at attempts = 238000
 tracks = 2707 at attempts = 239000
 tracks = 2707 at attempts = 240000
 tracks = 2707 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11
 ITERATION 12
 ITERATION 13
 ITERATION 14
 ITERATION 15
 ITERATION 16
 ITERATION 17
 ITERATION 18
 ITERATION 19
 ITERATION 20
 ITERATION 21
 ITERATION 22
 ITERATION 23
 ITERATION 24
 ITERATION 25

  longest Row is:28   Its length is:113600
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2788
 tracks = 2767 at attempts =  1000
 tracks = 2756 at attempts =  2000
 tracks = 2748 at attempts =  3000
 tracks = 2739 at attempts =  4000
 tracks = 2724 at attempts =  5000
 tracks = 2717 at attempts =  6000
 tracks = 2705 at attempts =  7000
 tracks = 2699 at attempts =  8000
 tracks = 2694 at attempts =  9000
 tracks = 2691 at attempts = 10000
 tracks = 2684 at attempts = 11000
 tracks = 2681 at attempts = 12000
 tracks = 2676 at attempts = 13000
 tracks = 2671 at attempts = 14000
 tracks = 2664 at attempts = 15000
 tracks = 2661 at attempts = 16000
 tracks = 2659 at attempts = 17000
 tracks = 2658 at attempts = 18000
 tracks = 2658 at attempts = 19000
 tracks = 2655 at attempts = 20000
 tracks = 2653 at attempts = 21000
 tracks = 2652 at attempts = 22000
 tracks = 2651 at attempts = 23000
 tracks = 2650 at attempts = 24000
 tracks = 2647 at attempts = 25000
 tracks = 2645 at attempts = 26000
 tracks = 2645 at attempts = 27000
 tracks = 2642 at attempts = 28000
 tracks = 2642 at attempts = 29000
 tracks = 2641 at attempts = 30000
 tracks = 2641 at attempts = 31000
 tracks = 2641 at attempts = 32000
 tracks = 2641 at attempts = 33000
 tracks = 2640 at attempts = 34000
 tracks = 2640 at attempts = 35000
 tracks = 2639 at attempts = 36000
 tracks = 2638 at attempts = 37000
 tracks = 2638 at attempts = 38000
 tracks = 2638 at attempts = 39000
 tracks = 2637 at attempts = 40000
 tracks = 2636 at attempts = 41000
 tracks = 2636 at attempts = 42000
 tracks = 2635 at attempts = 43000
 tracks = 2635 at attempts = 44000
 tracks = 2634 at attempts = 45000
 tracks = 2634 at attempts = 46000
 tracks = 2634 at attempts = 47000
 tracks = 2634 at attempts = 48000
 tracks = 2634 at attempts = 49000
 tracks = 2634 at attempts = 50000
 tracks = 2634 at attempts = 51000
 tracks = 2634 at attempts = 52000
 tracks = 2633 at attempts = 53000
 tracks = 2633 at attempts = 54000
 tracks = 2633 at attempts = 55000
 tracks = 2632 at attempts = 56000
 tracks = 2632 at attempts = 57000
 tracks = 2630 at attempts = 58000
 tracks = 2630 at attempts = 59000
 tracks = 2630 at attempts = 60000
 tracks = 2630 at attempts = 61000
 tracks = 2630 at attempts = 62000
 tracks = 2630 at attempts = 63000
 tracks = 2630 at attempts = 64000
 tracks = 2630 at attempts = 65000
 tracks = 2630 at attempts = 66000
 tracks = 2630 at attempts = 67000
 tracks = 2630 at attempts = 68000
 tracks = 2630 at attempts = 69000
 tracks = 2630 at attempts = 70000
 tracks = 2630 at attempts = 71000
 tracks = 2630 at attempts = 72000
 tracks = 2630 at attempts = 73000
 tracks = 2630 at attempts = 74000
 tracks = 2630 at attempts = 75000
 tracks = 2630 at attempts = 76000
 tracks = 2630 at attempts = 77000
 tracks = 2630 at attempts = 78000
 tracks = 2630 at attempts = 79000
 tracks = 2630 at attempts = 80000
 tracks = 2630 at attempts = 81000
 tracks = 2630 at attempts = 82000
 tracks = 2630 at attempts = 83000
 tracks = 2630 at attempts = 84000
 tracks = 2630 at attempts = 85000
 tracks = 2630 at attempts = 86000
 tracks = 2630 at attempts = 87000
 tracks = 2630 at attempts = 88000
 tracks = 2630 at attempts = 89000
 tracks = 2630 at attempts = 90000
 tracks = 2630 at attempts = 91000
 tracks = 2630 at attempts = 92000
 tracks = 2629 at attempts = 93000
 tracks = 2629 at attempts = 94000
 tracks = 2629 at attempts = 95000
 tracks = 2629 at attempts = 96000
 tracks = 2629 at attempts = 97000
 tracks = 2629 at attempts = 98000
 tracks = 2629 at attempts = 99000
 tracks = 2629 at attempts = 100000
 tracks = 2629 at attempts = 101000
 tracks = 2629 at attempts = 102000
 tracks = 2629 at attempts = 103000
 tracks = 2629 at attempts = 104000
 tracks = 2629 at attempts = 105000
 tracks = 2629 at attempts = 106000
 tracks = 2629 at attempts = 107000
 tracks = 2629 at attempts = 108000
 tracks = 2628 at attempts = 109000
 tracks = 2628 at attempts = 110000
 tracks = 2628 at attempts = 111000
 tracks = 2628 at attempts = 112000
 tracks = 2628 at attempts = 113000
 tracks = 2628 at attempts = 114000
 tracks = 2628 at attempts = 115000
 tracks = 2628 at attempts = 116000
 tracks = 2628 at attempts = 117000
 tracks = 2628 at attempts = 118000
 tracks = 2628 at attempts = 119000
 tracks = 2628 at attempts = 120000
 tracks = 2628 at attempts = 121000
 tracks = 2628 at attempts = 122000
 tracks = 2628 at attempts = 123000
 tracks = 2628 at attempts = 124000
 tracks = 2628 at attempts = 125000
 tracks = 2628 at attempts = 126000
 tracks = 2628 at attempts = 127000
 tracks = 2628 at attempts = 128000
 tracks = 2628 at attempts = 129000
 tracks = 2628 at attempts = 130000
 tracks = 2628 at attempts = 131000
 tracks = 2628 at attempts = 132000
 tracks = 2628 at attempts = 133000
 tracks = 2628 at attempts = 134000
 tracks = 2628 at attempts = 135000
 tracks = 2628 at attempts = 136000
 tracks = 2628 at attempts = 137000
 tracks = 2628 at attempts = 138000
 tracks = 2628 at attempts = 139000
 tracks = 2628 at attempts = 140000
 tracks = 2628 at attempts = 141000
 tracks = 2628 at attempts = 142000
 tracks = 2628 at attempts = 143000
 tracks = 2628 at attempts = 144000
 tracks = 2628 at attempts = 145000
 tracks = 2628 at attempts = 146000
 tracks = 2628 at attempts = 147000
 tracks = 2628 at attempts = 148000
 tracks = 2628 at attempts = 149000
 tracks = 2628 at attempts = 150000
 tracks = 2628 at attempts = 151000
 tracks = 2628 at attempts = 152000
 tracks = 2628 at attempts = 153000
 tracks = 2628 at attempts = 154000
 tracks = 2628 at attempts = 155000
 tracks = 2628 at attempts = 156000
 tracks = 2628 at attempts = 157000
 tracks = 2628 at attempts = 158000
 tracks = 2628 at attempts = 159000
 tracks = 2628 at attempts = 160000
 tracks = 2628 at attempts = 161000
 tracks = 2628 at attempts = 162000
 tracks = 2628 at attempts = 163000
 tracks = 2628 at attempts = 164000
 tracks = 2628 at attempts = 165000
 tracks = 2628 at attempts = 166000
 tracks = 2628 at attempts = 167000
 tracks = 2628 at attempts = 168000
 tracks = 2628 at attempts = 169000
 tracks = 2628 at attempts = 170000
 tracks = 2628 at attempts = 171000
 tracks = 2628 at attempts = 172000
 tracks = 2628 at attempts = 173000
 tracks = 2628 at attempts = 174000
 tracks = 2628 at attempts = 175000
 tracks = 2628 at attempts = 176000
 tracks = 2628 at attempts = 177000
 tracks = 2628 at attempts = 178000
 tracks = 2628 at attempts = 179000
 tracks = 2628 at attempts = 180000
 tracks = 2628 at attempts = 181000
 tracks = 2628 at attempts = 182000
 tracks = 2628 at attempts = 183000
 tracks = 2628 at attempts = 184000
 tracks = 2628 at attempts = 185000
 tracks = 2628 at attempts = 186000
 tracks = 2628 at attempts = 187000
 tracks = 2628 at attempts = 188000
 tracks = 2628 at attempts = 189000
 tracks = 2628 at attempts = 190000
 tracks = 2628 at attempts = 191000
 tracks = 2628 at attempts = 192000
 tracks = 2628 at attempts = 193000
 tracks = 2628 at attempts = 194000
 tracks = 2628 at attempts = 195000
 tracks = 2628 at attempts = 196000
 tracks = 2628 at attempts = 197000
 tracks = 2628 at attempts = 198000
 tracks = 2628 at attempts = 199000
 tracks = 2628 at attempts = 200000
 tracks = 2628 at attempts = 201000
 tracks = 2628 at attempts = 202000
 tracks = 2628 at attempts = 203000
 tracks = 2628 at attempts = 204000
 tracks = 2628 at attempts = 205000
 tracks = 2628 at attempts = 206000
 tracks = 2628 at attempts = 207000
 tracks = 2628 at attempts = 208000
 tracks = 2628 at attempts = 209000
 tracks = 2628 at attempts = 210000
 tracks = 2628 at attempts = 211000
 tracks = 2628 at attempts = 212000
 tracks = 2628 at attempts = 213000
 tracks = 2628 at attempts = 214000
 tracks = 2628 at attempts = 215000
 tracks = 2628 at attempts = 216000
 tracks = 2628 at attempts = 217000
 tracks = 2628 at attempts = 218000
 tracks = 2628 at attempts = 219000
 tracks = 2628 at attempts = 220000
 tracks = 2628 at attempts = 221000
 tracks = 2628 at attempts = 222000
 tracks = 2628 at attempts = 223000
 tracks = 2628 at attempts = 224000
 tracks = 2628 at attempts = 225000
 tracks = 2628 at attempts = 226000
 tracks = 2628 at attempts = 227000
 tracks = 2628 at attempts = 228000
 tracks = 2628 at attempts = 229000
 tracks = 2628 at attempts = 230000
 tracks = 2628 at attempts = 231000
 tracks = 2628 at attempts = 232000
 tracks = 2628 at attempts = 233000
 tracks = 2628 at attempts = 234000
 tracks = 2628 at attempts = 235000
 tracks = 2628 at attempts = 236000
 tracks = 2628 at attempts = 237000
 tracks = 2628 at attempts = 238000
 tracks = 2628 at attempts = 239000
 tracks = 2628 at attempts = 240000
 tracks = 2628 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11
 ITERATION 12
 ITERATION 13
 ITERATION 14
 ITERATION 15
 ITERATION 16
 ITERATION 17
 ITERATION 18
 ITERATION 19
 ITERATION 20

  longest Row is:28   Its length is:113840
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2784
 tracks = 2762 at attempts =  1000
 tracks = 2754 at attempts =  2000
 tracks = 2745 at attempts =  3000
 tracks = 2733 at attempts =  4000
 tracks = 2724 at attempts =  5000
 tracks = 2710 at attempts =  6000
 tracks = 2696 at attempts =  7000
 tracks = 2689 at attempts =  8000
 tracks = 2687 at attempts =  9000
 tracks = 2681 at attempts = 10000
 tracks = 2673 at attempts = 11000
 tracks = 2664 at attempts = 12000
 tracks = 2659 at attempts = 13000
 tracks = 2658 at attempts = 14000
 tracks = 2655 at attempts = 15000
 tracks = 2654 at attempts = 16000
 tracks = 2653 at attempts = 17000
 tracks = 2651 at attempts = 18000
 tracks = 2651 at attempts = 19000
 tracks = 2650 at attempts = 20000
 tracks = 2650 at attempts = 21000
 tracks = 2648 at attempts = 22000
 tracks = 2648 at attempts = 23000
 tracks = 2646 at attempts = 24000
 tracks = 2646 at attempts = 25000
 tracks = 2645 at attempts = 26000
 tracks = 2644 at attempts = 27000
 tracks = 2641 at attempts = 28000
 tracks = 2641 at attempts = 29000
 tracks = 2641 at attempts = 30000
 tracks = 2641 at attempts = 31000
 tracks = 2641 at attempts = 32000
 tracks = 2640 at attempts = 33000
 tracks = 2640 at attempts = 34000
 tracks = 2640 at attempts = 35000
 tracks = 2640 at attempts = 36000
 tracks = 2640 at attempts = 37000
 tracks = 2640 at attempts = 38000
 tracks = 2640 at attempts = 39000
 tracks = 2640 at attempts = 40000
 tracks = 2640 at attempts = 41000
 tracks = 2638 at attempts = 42000
 tracks = 2637 at attempts = 43000
 tracks = 2637 at attempts = 44000
 tracks = 2637 at attempts = 45000
 tracks = 2637 at attempts = 46000
 tracks = 2637 at attempts = 47000
 tracks = 2637 at attempts = 48000
 tracks = 2637 at attempts = 49000
 tracks = 2637 at attempts = 50000
 tracks = 2637 at attempts = 51000
 tracks = 2637 at attempts = 52000
 tracks = 2637 at attempts = 53000
 tracks = 2637 at attempts = 54000
 tracks = 2637 at attempts = 55000
 tracks = 2637 at attempts = 56000
 tracks = 2637 at attempts = 57000
 tracks = 2637 at attempts = 58000
 tracks = 2637 at attempts = 59000
 tracks = 2637 at attempts = 60000
 tracks = 2637 at attempts = 61000
 tracks = 2637 at attempts = 62000
 tracks = 2637 at attempts = 63000
 tracks = 2637 at attempts = 64000
 tracks = 2637 at attempts = 65000
 tracks = 2637 at attempts = 66000
 tracks = 2637 at attempts = 67000
 tracks = 2637 at attempts = 68000
 tracks = 2637 at attempts = 69000
 tracks = 2637 at attempts = 70000
 tracks = 2637 at attempts = 71000
 tracks = 2637 at attempts = 72000
 tracks = 2637 at attempts = 73000
 tracks = 2637 at attempts = 74000
 tracks = 2637 at attempts = 75000
 tracks = 2637 at attempts = 76000
 tracks = 2637 at attempts = 77000
 tracks = 2637 at attempts = 78000
 tracks = 2637 at attempts = 79000
 tracks = 2637 at attempts = 80000
 tracks = 2637 at attempts = 81000
 tracks = 2637 at attempts = 82000
 tracks = 2637 at attempts = 83000
 tracks = 2637 at attempts = 84000
 tracks = 2637 at attempts = 85000
 tracks = 2637 at attempts = 86000
 tracks = 2637 at attempts = 87000
 tracks = 2637 at attempts = 88000
 tracks = 2637 at attempts = 89000
 tracks = 2637 at attempts = 90000
 tracks = 2637 at attempts = 91000
 tracks = 2637 at attempts = 92000
 tracks = 2637 at attempts = 93000
 tracks = 2637 at attempts = 94000
 tracks = 2637 at attempts = 95000
 tracks = 2637 at attempts = 96000
 tracks = 2637 at attempts = 97000
 tracks = 2637 at attempts = 98000
 tracks = 2637 at attempts = 99000
 tracks = 2637 at attempts = 100000
 tracks = 2637 at attempts = 101000
 tracks = 2637 at attempts = 102000
 tracks = 2637 at attempts = 103000
 tracks = 2637 at attempts = 104000
 tracks = 2637 at attempts = 105000
 tracks = 2637 at attempts = 106000
 tracks = 2637 at attempts = 107000
 tracks = 2637 at attempts = 108000
 tracks = 2637 at attempts = 109000
 tracks = 2637 at attempts = 110000
 tracks = 2637 at attempts = 111000
 tracks = 2637 at attempts = 112000
 tracks = 2637 at attempts = 113000
 tracks = 2637 at attempts = 114000
 tracks = 2637 at attempts = 115000
 tracks = 2637 at attempts = 116000
 tracks = 2637 at attempts = 117000
 tracks = 2637 at attempts = 118000
 tracks = 2637 at attempts = 119000
 tracks = 2637 at attempts = 120000
 tracks = 2637 at attempts = 121000
 tracks = 2637 at attempts = 122000
 tracks = 2637 at attempts = 123000
 tracks = 2637 at attempts = 124000
 tracks = 2637 at attempts = 125000
 tracks = 2637 at attempts = 126000
 tracks = 2637 at attempts = 127000
 tracks = 2637 at attempts = 128000
 tracks = 2637 at attempts = 129000
 tracks = 2637 at attempts = 130000
 tracks = 2637 at attempts = 131000
 tracks = 2637 at attempts = 132000
 tracks = 2637 at attempts = 133000
 tracks = 2637 at attempts = 134000
 tracks = 2637 at attempts = 135000
 tracks = 2637 at attempts = 136000
 tracks = 2637 at attempts = 137000
 tracks = 2637 at attempts = 138000
 tracks = 2637 at attempts = 139000
 tracks = 2637 at attempts = 140000
 tracks = 2637 at attempts = 141000
 tracks = 2637 at attempts = 142000
 tracks = 2637 at attempts = 143000
 tracks = 2637 at attempts = 144000
 tracks = 2637 at attempts = 145000
 tracks = 2637 at attempts = 146000
 tracks = 2637 at attempts = 147000
 tracks = 2637 at attempts = 148000
 tracks = 2637 at attempts = 149000
 tracks = 2637 at attempts = 150000
 tracks = 2637 at attempts = 151000
 tracks = 2637 at attempts = 152000
 tracks = 2637 at attempts = 153000
 tracks = 2637 at attempts = 154000
 tracks = 2637 at attempts = 155000
 tracks = 2637 at attempts = 156000
 tracks = 2637 at attempts = 157000
 tracks = 2637 at attempts = 158000
 tracks = 2637 at attempts = 159000
 tracks = 2637 at attempts = 160000
 tracks = 2637 at attempts = 161000
 tracks = 2637 at attempts = 162000
 tracks = 2637 at attempts = 163000
 tracks = 2637 at attempts = 164000
 tracks = 2637 at attempts = 165000
 tracks = 2637 at attempts = 166000
 tracks = 2637 at attempts = 167000
 tracks = 2637 at attempts = 168000
 tracks = 2637 at attempts = 169000
 tracks = 2637 at attempts = 170000
 tracks = 2637 at attempts = 171000
 tracks = 2637 at attempts = 172000
 tracks = 2637 at attempts = 173000
 tracks = 2637 at attempts = 174000
 tracks = 2637 at attempts = 175000
 tracks = 2637 at attempts = 176000
 tracks = 2637 at attempts = 177000
 tracks = 2637 at attempts = 178000
 tracks = 2637 at attempts = 179000
 tracks = 2637 at attempts = 180000
 tracks = 2637 at attempts = 181000
 tracks = 2637 at attempts = 182000
 tracks = 2637 at attempts = 183000
 tracks = 2637 at attempts = 184000
 tracks = 2637 at attempts = 185000
 tracks = 2637 at attempts = 186000
 tracks = 2637 at attempts = 187000
 tracks = 2637 at attempts = 188000
 tracks = 2637 at attempts = 189000
 tracks = 2637 at attempts = 190000
 tracks = 2637 at attempts = 191000
 tracks = 2637 at attempts = 192000
 tracks = 2637 at attempts = 193000
 tracks = 2637 at attempts = 194000
 tracks = 2637 at attempts = 195000
 tracks = 2637 at attempts = 196000
 tracks = 2637 at attempts = 197000
 tracks = 2637 at attempts = 198000
 tracks = 2637 at attempts = 199000
 tracks = 2637 at attempts = 200000
 tracks = 2637 at attempts = 201000
 tracks = 2637 at attempts = 202000
 tracks = 2637 at attempts = 203000
 tracks = 2637 at attempts = 204000
 tracks = 2637 at attempts = 205000
 tracks = 2637 at attempts = 206000
 tracks = 2637 at attempts = 207000
 tracks = 2637 at attempts = 208000
 tracks = 2637 at attempts = 209000
 tracks = 2637 at attempts = 210000
 tracks = 2637 at attempts = 211000
 tracks = 2637 at attempts = 212000
 tracks = 2637 at attempts = 213000
 tracks = 2637 at attempts = 214000
 tracks = 2637 at attempts = 215000
 tracks = 2637 at attempts = 216000
 tracks = 2637 at attempts = 217000
 tracks = 2637 at attempts = 218000
 tracks = 2637 at attempts = 219000
 tracks = 2637 at attempts = 220000
 tracks = 2637 at attempts = 221000
 tracks = 2637 at attempts = 222000
 tracks = 2637 at attempts = 223000
 tracks = 2637 at attempts = 224000
 tracks = 2637 at attempts = 225000
 tracks = 2637 at attempts = 226000
 tracks = 2637 at attempts = 227000
 tracks = 2637 at attempts = 228000
 tracks = 2637 at attempts = 229000
 tracks = 2637 at attempts = 230000
 tracks = 2637 at attempts = 231000
 tracks = 2637 at attempts = 232000
 tracks = 2637 at attempts = 233000
 tracks = 2637 at attempts = 234000
 tracks = 2637 at attempts = 235000
 tracks = 2637 at attempts = 236000
 tracks = 2637 at attempts = 237000
 tracks = 2637 at attempts = 238000
 tracks = 2637 at attempts = 239000
 tracks = 2637 at attempts = 240000
 tracks = 2637 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2
 ITERATION  3
 ITERATION  4
 ITERATION  5
 ITERATION  6
 ITERATION  7
 ITERATION  8
 ITERATION  9
 ITERATION 10
 ITERATION 11
 ITERATION 12
 ITERATION 13
 ITERATION 14

  longest Row is:28   Its length is:113840
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2838
 tracks = 2823 at attempts =  1000
 tracks = 2810 at attempts =  2000
 tracks = 2802 at attempts =  3000
 tracks = 2795 at attempts =  4000
 tracks = 2784 at attempts =  5000
 tracks = 2773 at attempts =  6000
 tracks = 2766 at attempts =  7000
 tracks = 2754 at attempts =  8000
 tracks = 2750 at attempts =  9000
 tracks = 2745 at attempts = 10000
 tracks = 2738 at attempts = 11000
 tracks = 2734 at attempts = 12000
 tracks = 2730 at attempts = 13000
 tracks = 2727 at attempts = 14000
 tracks = 2720 at attempts = 15000
 tracks = 2717 at attempts = 16000
 tracks = 2713 at attempts = 17000
 tracks = 2709 at attempts = 18000
 tracks = 2709 at attempts = 19000
 tracks = 2704 at attempts = 20000
 tracks = 2701 at attempts = 21000
 tracks = 2700 at attempts = 22000
 tracks = 2697 at attempts = 23000
 tracks = 2696 at attempts = 24000
 tracks = 2695 at attempts = 25000
 tracks = 2692 at attempts = 26000
 tracks = 2689 at attempts = 27000
 tracks = 2687 at attempts = 28000
 tracks = 2686 at attempts = 29000
 tracks = 2686 at attempts = 30000
 tracks = 2685 at attempts = 31000
 tracks = 2685 at attempts = 32000
 tracks = 2684 at attempts = 33000
 tracks = 2683 at attempts = 34000
 tracks = 2683 at attempts = 35000
 tracks = 2681 at attempts = 36000
 tracks = 2679 at attempts = 37000
 tracks = 2679 at attempts = 38000
 tracks = 2679 at attempts = 39000
 tracks = 2679 at attempts = 40000
 tracks = 2678 at attempts = 41000
 tracks = 2678 at attempts = 42000
 tracks = 2678 at attempts = 43000
 tracks = 2678 at attempts = 44000
 tracks = 2678 at attempts = 45000
 tracks = 2678 at attempts = 46000
 tracks = 2678 at attempts = 47000
 tracks = 2678 at attempts = 48000
 tracks = 2677 at attempts = 49000
 tracks = 2677 at attempts = 50000
 tracks = 2677 at attempts = 51000
 tracks = 2677 at attempts = 52000
 tracks = 2677 at attempts = 53000
 tracks = 2676 at attempts = 54000
 tracks = 2676 at attempts = 55000
 tracks = 2676 at attempts = 56000
 tracks = 2676 at attempts = 57000
 tracks = 2676 at attempts = 58000
 tracks = 2676 at attempts = 59000
 tracks = 2676 at attempts = 60000
 tracks = 2676 at attempts = 61000
 tracks = 2675 at attempts = 62000
 tracks = 2675 at attempts = 63000
 tracks = 2675 at attempts = 64000
 tracks = 2675 at attempts = 65000
 tracks = 2675 at attempts = 66000
 tracks = 2675 at attempts = 67000
 tracks = 2674 at attempts = 68000
 tracks = 2674 at attempts = 69000
 tracks = 2674 at attempts = 70000
 tracks = 2674 at attempts = 71000
 tracks = 2674 at attempts = 72000
 tracks = 2674 at attempts = 73000
 tracks = 2674 at attempts = 74000
 tracks = 2674 at attempts = 75000
 tracks = 2674 at attempts = 76000
 tracks = 2673 at attempts = 77000
 tracks = 2673 at attempts = 78000
 tracks = 2673 at attempts = 79000
 tracks = 2672 at attempts = 80000
 tracks = 2672 at attempts = 81000
 tracks = 2672 at attempts = 82000
 tracks = 2672 at attempts = 83000
 tracks = 2672 at attempts = 84000
 tracks = 2672 at attempts = 85000
 tracks = 2672 at attempts = 86000
 tracks = 2672 at attempts = 87000
 tracks = 2672 at attempts = 88000
 tracks = 2672 at attempts = 89000
 tracks = 2672 at attempts = 90000
 tracks = 2672 at attempts = 91000
 tracks = 2672 at attempts = 92000
 tracks = 2672 at attempts = 93000
 tracks = 2672 at attempts = 94000
 tracks = 2672 at attempts = 95000
 tracks = 2672 at attempts = 96000
 tracks = 2672 at attempts = 97000
 tracks = 2672 at attempts = 98000
 tracks = 2672 at attempts = 99000
 tracks = 2672 at attempts = 100000
 tracks = 2672 at attempts = 101000
 tracks = 2672 at attempts = 102000
 tracks = 2672 at attempts = 103000
 tracks = 2672 at attempts = 104000
 tracks = 2672 at attempts = 105000
 tracks = 2672 at attempts = 106000
 tracks = 2672 at attempts = 107000
 tracks = 2672 at attempts = 108000
 tracks = 2672 at attempts = 109000
 tracks = 2672 at attempts = 110000
 tracks = 2672 at attempts = 111000
 tracks = 2672 at attempts = 112000
 tracks = 2672 at attempts = 113000
 tracks = 2672 at attempts = 114000
 tracks = 2672 at attempts = 115000
 tracks = 2672 at attempts = 116000
 tracks = 2672 at attempts = 117000
 tracks = 2672 at attempts = 118000
 tracks = 2672 at attempts = 119000
 tracks = 2672 at attempts = 120000
 tracks = 2672 at attempts = 121000
 tracks = 2672 at attempts = 122000
 tracks = 2672 at attempts = 123000
 tracks = 2672 at attempts = 124000
 tracks = 2672 at attempts = 125000
 tracks = 2672 at attempts = 126000
 tracks = 2672 at attempts = 127000
 tracks = 2672 at attempts = 128000
 tracks = 2672 at attempts = 129000
 tracks = 2672 at attempts = 130000
 tracks = 2672 at attempts = 131000
 tracks = 2672 at attempts = 132000
 tracks = 2672 at attempts = 133000
 tracks = 2672 at attempts = 134000
 tracks = 2672 at attempts = 135000
 tracks = 2672 at attempts = 136000
 tracks = 2672 at attempts = 137000
 tracks = 2672 at attempts = 138000
 tracks = 2672 at attempts = 139000
 tracks = 2672 at attempts = 140000
 tracks = 2672 at attempts = 141000
 tracks = 2672 at attempts = 142000
 tracks = 2672 at attempts = 143000
 tracks = 2672 at attempts = 144000
 tracks = 2672 at attempts = 145000
 tracks = 2672 at attempts = 146000
 tracks = 2672 at attempts = 147000
 tracks = 2672 at attempts = 148000
 tracks = 2672 at attempts = 149000
 tracks = 2672 at attempts = 150000
 tracks = 2672 at attempts = 151000
 tracks = 2672 at attempts = 152000
 tracks = 2672 at attempts = 153000
 tracks = 2672 at attempts = 154000
 tracks = 2672 at attempts = 155000
 tracks = 2672 at attempts = 156000
 tracks = 2672 at attempts = 157000
 tracks = 2672 at attempts = 158000
 tracks = 2672 at attempts = 159000
 tracks = 2672 at attempts = 160000
 tracks = 2672 at attempts = 161000
 tracks = 2672 at attempts = 162000
 tracks = 2672 at attempts = 163000
 tracks = 2672 at attempts = 164000
 tracks = 2672 at attempts = 165000
 tracks = 2672 at attempts = 166000
 tracks = 2672 at attempts = 167000
 tracks = 2672 at attempts = 168000
 tracks = 2672 at attempts = 169000
 tracks = 2672 at attempts = 170000
 tracks = 2672 at attempts = 171000
 tracks = 2672 at attempts = 172000
 tracks = 2672 at attempts = 173000
 tracks = 2672 at attempts = 174000
 tracks = 2672 at attempts = 175000
 tracks = 2672 at attempts = 176000
 tracks = 2672 at attempts = 177000
 tracks = 2672 at attempts = 178000
 tracks = 2672 at attempts = 179000
 tracks = 2672 at attempts = 180000
 tracks = 2672 at attempts = 181000
 tracks = 2672 at attempts = 182000
 tracks = 2672 at attempts = 183000
 tracks = 2672 at attempts = 184000
 tracks = 2672 at attempts = 185000
 tracks = 2672 at attempts = 186000
 tracks = 2672 at attempts = 187000
 tracks = 2672 at attempts = 188000
 tracks = 2672 at attempts = 189000
 tracks = 2672 at attempts = 190000
 tracks = 2672 at attempts = 191000
 tracks = 2672 at attempts = 192000
 tracks = 2672 at attempts = 193000
 tracks = 2672 at attempts = 194000
 tracks = 2672 at attempts = 195000
 tracks = 2672 at attempts = 196000
 tracks = 2672 at attempts = 197000
 tracks = 2672 at attempts = 198000
 tracks = 2672 at attempts = 199000
 tracks = 2672 at attempts = 200000
 tracks = 2672 at attempts = 201000
 tracks = 2672 at attempts = 202000
 tracks = 2672 at attempts = 203000
 tracks = 2672 at attempts = 204000
 tracks = 2672 at attempts = 205000
 tracks = 2672 at attempts = 206000
 tracks = 2672 at attempts = 207000
 tracks = 2672 at attempts = 208000
 tracks = 2672 at attempts = 209000
 tracks = 2672 at attempts = 210000
 tracks = 2672 at attempts = 211000
 tracks = 2672 at attempts = 212000
 tracks = 2672 at attempts = 213000
 tracks = 2672 at attempts = 214000
 tracks = 2672 at attempts = 215000
 tracks = 2672 at attempts = 216000
 tracks = 2672 at attempts = 217000
 tracks = 2672 at attempts = 218000
 tracks = 2672 at attempts = 219000
 tracks = 2672 at attempts = 220000
 tracks = 2672 at attempts = 221000
 tracks = 2672 at attempts = 222000
 tracks = 2672 at attempts = 223000
 tracks = 2672 at attempts = 224000
 tracks = 2672 at attempts = 225000
 tracks = 2672 at attempts = 226000
 tracks = 2672 at attempts = 227000
 tracks = 2672 at attempts = 228000
 tracks = 2672 at attempts = 229000
 tracks = 2672 at attempts = 230000
 tracks = 2672 at attempts = 231000
 tracks = 2672 at attempts = 232000
 tracks = 2672 at attempts = 233000
 tracks = 2672 at attempts = 234000
 tracks = 2672 at attempts = 235000
 tracks = 2672 at attempts = 236000
 tracks = 2672 at attempts = 237000
 tracks = 2672 at attempts = 238000
 tracks = 2672 at attempts = 239000
 tracks = 2672 at attempts = 240000
 tracks = 2672 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 79360
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1
 ITERATION  2

  longest Row is:22   Its length is:105360
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks = 2688
 tracks = 2687 at attempts =  1000
 tracks = 2687 at attempts =  2000
 tracks = 2687 at attempts =  3000
 tracks = 2687 at attempts =  4000
 tracks = 2687 at attempts =  5000
 tracks = 2687 at attempts =  6000
 tracks = 2685 at attempts =  7000
 tracks = 2685 at attempts =  8000
 tracks = 2685 at attempts =  9000
 tracks = 2685 at attempts = 10000
 tracks = 2684 at attempts = 11000
 tracks = 2684 at attempts = 12000
 tracks = 2684 at attempts = 13000
 tracks = 2684 at attempts = 14000
 tracks = 2684 at attempts = 15000
 tracks = 2683 at attempts = 16000
 tracks = 2683 at attempts = 17000
 tracks = 2683 at attempts = 18000
 tracks = 2683 at attempts = 19000
 tracks = 2683 at attempts = 20000
 tracks = 2683 at attempts = 21000
 tracks = 2683 at attempts = 22000
 tracks = 2683 at attempts = 23000
 tracks = 2683 at attempts = 24000
 tracks = 2683 at attempts = 25000
 tracks = 2683 at attempts = 26000
 tracks = 2683 at attempts = 27000
 tracks = 2683 at attempts = 28000
 tracks = 2683 at attempts = 29000
 tracks = 2683 at attempts = 30000
 tracks = 2683 at attempts = 31000
 tracks = 2683 at attempts = 32000
 tracks = 2683 at attempts = 33000
 tracks = 2683 at attempts = 34000
 tracks = 2683 at attempts = 35000
 tracks = 2683 at attempts = 36000
 tracks = 2683 at attempts = 37000
 tracks = 2683 at attempts = 38000
 tracks = 2683 at attempts = 39000
 tracks = 2683 at attempts = 40000
 tracks = 2683 at attempts = 41000
 tracks = 2683 at attempts = 42000
 tracks = 2683 at attempts = 43000
 tracks = 2683 at attempts = 44000
 tracks = 2683 at attempts = 45000
 tracks = 2683 at attempts = 46000
 tracks = 2683 at attempts = 47000
 tracks = 2683 at attempts = 48000
 tracks = 2683 at attempts = 49000
 tracks = 2683 at attempts = 50000
 tracks = 2683 at attempts = 51000
 tracks = 2683 at attempts = 52000
 tracks = 2683 at attempts = 53000
 tracks = 2683 at attempts = 54000
 tracks = 2683 at attempts = 55000
 tracks = 2683 at attempts = 56000
 tracks = 2683 at attempts = 57000
 tracks = 2683 at attempts = 58000
 tracks = 2683 at attempts = 59000
 tracks = 2683 at attempts = 60000
 tracks = 2683 at attempts = 61000
 tracks = 2683 at attempts = 62000
 tracks = 2683 at attempts = 63000
 tracks = 2683 at attempts = 64000
 tracks = 2683 at attempts = 65000
 tracks = 2683 at attempts = 66000
 tracks = 2683 at attempts = 67000
 tracks = 2683 at attempts = 68000
 tracks = 2683 at attempts = 69000
 tracks = 2683 at attempts = 70000
 tracks = 2683 at attempts = 71000
 tracks = 2683 at attempts = 72000
 tracks = 2683 at attempts = 73000
 tracks = 2683 at attempts = 74000
 tracks = 2683 at attempts = 75000
 tracks = 2683 at attempts = 76000
 tracks = 2683 at attempts = 77000
 tracks = 2683 at attempts = 78000
 tracks = 2683 at attempts = 79000
 tracks = 2683 at attempts = 80000
 tracks = 2683 at attempts = 81000
 tracks = 2683 at attempts = 82000
 tracks = 2683 at attempts = 83000
 tracks = 2683 at attempts = 84000
 tracks = 2683 at attempts = 85000
 tracks = 2683 at attempts = 86000
 tracks = 2683 at attempts = 87000
 tracks = 2683 at attempts = 88000
 tracks = 2683 at attempts = 89000
 tracks = 2683 at attempts = 90000
 tracks = 2683 at attempts = 91000
 tracks = 2683 at attempts = 92000
 tracks = 2683 at attempts = 93000
 tracks = 2683 at attempts = 94000
 tracks = 2683 at attempts = 95000
 tracks = 2683 at attempts = 96000
 tracks = 2683 at attempts = 97000
 tracks = 2683 at attempts = 98000
 tracks = 2683 at attempts = 99000
 tracks = 2683 at attempts = 100000
 tracks = 2683 at attempts = 101000
 tracks = 2683 at attempts = 102000
 tracks = 2683 at attempts = 103000
 tracks = 2683 at attempts = 104000
 tracks = 2683 at attempts = 105000
 tracks = 2683 at attempts = 106000
 tracks = 2683 at attempts = 107000
 tracks = 2683 at attempts = 108000
 tracks = 2683 at attempts = 109000
 tracks = 2683 at attempts = 110000
 tracks = 2683 at attempts = 111000
 tracks = 2683 at attempts = 112000
 tracks = 2683 at attempts = 113000
 tracks = 2683 at attempts = 114000
 tracks = 2683 at attempts = 115000
 tracks = 2683 at attempts = 116000
 tracks = 2683 at attempts = 117000
 tracks = 2683 at attempts = 118000
 tracks = 2683 at attempts = 119000
 tracks = 2683 at attempts = 120000
 tracks = 2683 at attempts = 121000
 tracks = 2683 at attempts = 122000
 tracks = 2683 at attempts = 123000
 tracks = 2683 at attempts = 124000
 tracks = 2683 at attempts = 125000
 tracks = 2683 at attempts = 126000
 tracks = 2683 at attempts = 127000
 tracks = 2683 at attempts = 128000
 tracks = 2683 at attempts = 129000
 tracks = 2683 at attempts = 130000
 tracks = 2683 at attempts = 131000
 tracks = 2683 at attempts = 132000
 tracks = 2683 at attempts = 133000
 tracks = 2683 at attempts = 134000
 tracks = 2683 at attempts = 135000
 tracks = 2683 at attempts = 136000
 tracks = 2683 at attempts = 137000
 tracks = 2683 at attempts = 138000
 tracks = 2683 at attempts = 139000
 tracks = 2683 at attempts = 140000
 tracks = 2683 at attempts = 141000
 tracks = 2683 at attempts = 142000
 tracks = 2683 at attempts = 143000
 tracks = 2683 at attempts = 144000
 tracks = 2683 at attempts = 145000
 tracks = 2683 at attempts = 146000
 tracks = 2683 at attempts = 147000
 tracks = 2683 at attempts = 148000
 tracks = 2683 at attempts = 149000
 tracks = 2683 at attempts = 150000
 tracks = 2683 at attempts = 151000
 tracks = 2683 at attempts = 152000
 tracks = 2683 at attempts = 153000
 tracks = 2683 at attempts = 154000
 tracks = 2683 at attempts = 155000
 tracks = 2683 at attempts = 156000
 tracks = 2683 at attempts = 157000
 tracks = 2683 at attempts = 158000
 tracks = 2683 at attempts = 159000
 tracks = 2683 at attempts = 160000
 tracks = 2683 at attempts = 161000
 tracks = 2683 at attempts = 162000
 tracks = 2683 at attempts = 163000
 tracks = 2683 at attempts = 164000
 tracks = 2683 at attempts = 165000
 tracks = 2683 at attempts = 166000
 tracks = 2683 at attempts = 167000
 tracks = 2683 at attempts = 168000
 tracks = 2683 at attempts = 169000
 tracks = 2683 at attempts = 170000
 tracks = 2683 at attempts = 171000
 tracks = 2683 at attempts = 172000
 tracks = 2683 at attempts = 173000
 tracks = 2683 at attempts = 174000
 tracks = 2683 at attempts = 175000
 tracks = 2683 at attempts = 176000
 tracks = 2683 at attempts = 177000
 tracks = 2683 at attempts = 178000
 tracks = 2683 at attempts = 179000
 tracks = 2683 at attempts = 180000
 tracks = 2683 at attempts = 181000
 tracks = 2683 at attempts = 182000
 tracks = 2683 at attempts = 183000
 tracks = 2683 at attempts = 184000
 tracks = 2683 at attempts = 185000
 tracks = 2683 at attempts = 186000
 tracks = 2683 at attempts = 187000
 tracks = 2683 at attempts = 188000
 tracks = 2683 at attempts = 189000
 tracks = 2683 at attempts = 190000
 tracks = 2683 at attempts = 191000
 tracks = 2683 at attempts = 192000
 tracks = 2683 at attempts = 193000
 tracks = 2683 at attempts = 194000
 tracks = 2683 at attempts = 195000
 tracks = 2683 at attempts = 196000
 tracks = 2683 at attempts = 197000
 tracks = 2683 at attempts = 198000
 tracks = 2683 at attempts = 199000
 tracks = 2683 at attempts = 200000
 tracks = 2683 at attempts = 201000
 tracks = 2683 at attempts = 202000
 tracks = 2683 at attempts = 203000
 tracks = 2683 at attempts = 204000
 tracks = 2683 at attempts = 205000
 tracks = 2683 at attempts = 206000
 tracks = 2683 at attempts = 207000
 tracks = 2683 at attempts = 208000
 tracks = 2683 at attempts = 209000
 tracks = 2683 at attempts = 210000
 tracks = 2683 at attempts = 211000
 tracks = 2683 at attempts = 212000
 tracks = 2683 at attempts = 213000
 tracks = 2683 at attempts = 214000
 tracks = 2683 at attempts = 215000
 tracks = 2683 at attempts = 216000
 tracks = 2683 at attempts = 217000
 tracks = 2683 at attempts = 218000
 tracks = 2683 at attempts = 219000
 tracks = 2683 at attempts = 220000
 tracks = 2683 at attempts = 221000
 tracks = 2683 at attempts = 222000
 tracks = 2683 at attempts = 223000
 tracks = 2683 at attempts = 224000
 tracks = 2683 at attempts = 225000
 tracks = 2683 at attempts = 226000
 tracks = 2683 at attempts = 227000
 tracks = 2683 at attempts = 228000
 tracks = 2683 at attempts = 229000
 tracks = 2683 at attempts = 230000
 tracks = 2683 at attempts = 231000
 tracks = 2683 at attempts = 232000
 tracks = 2683 at attempts = 233000
 tracks = 2683 at attempts = 234000
 tracks = 2683 at attempts = 235000
 tracks = 2683 at attempts = 236000
 tracks = 2683 at attempts = 237000
 tracks = 2683 at attempts = 238000
 tracks = 2683 at attempts = 239000
 tracks = 2683 at attempts = 240000
 tracks = 2683 at attempts = 241000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 2624
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell.tcl
Using cell FILL for fill
Running place2def.tcl
Limits: xbot = -535.0 ybot = -465.0 xtop = 78215.0 ytop = 58165.0
Core values: 40.0 50.0 78200.0 58050.0
Offsets: 40.0 50.0
6 routing layers
587 horizontal tracks from -300.0 to 58400.0 step 100 (M1, M3, ...)
985 vertical tracks from -320.0 to 78480.0 step 80.0 (M2, M4, ...)
Done with place2def.tcl
Running addspacers.tcl  data_selector /usr/share/qflow/tech/osu018/osu018_stdcells.lef FILL
Running addspacers.tcl
Reading FILL macros from LEF file.
Reading DEF file data_selector.def. . .
Number of rows is 58
Longest row has width 782.0 um
Analysis of DEF file:
Number of components = 27102
New number of components = 27509
Number of rows = 58
Done with addspacers.tcl
Running blifanno.tcl
Reading DEF file data_selector.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis
Files:
   Verilog: /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.rtl.v
   Verilog: /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.rtlnopwr.v
   Spice:   /home/du/Files_du/UCR/II_18/MicroE/PROYECTO/QFLOW/synthesis/data_selector.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on Mon Nov 19 22:37:01 CST 2018
----------------------------------------------
Vesta static timing analysis tool
(c) 2013-2017 Tim Edwards, Open Circuit Design
----------------------------------------------

Parsing library "osu018_stdcells"
End of library at line 6141
Parsing module "data_selector"
Lib Read:  Processed 6142 lines.
Verilog netlist read:  Processed 9193 lines.
Number of paths analyzed:  1091

Top 20 maximum delay paths:
Path DFFPOSX1_17/CLK to DFFPOSX1_1/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_3/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_6/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_9/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_12/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_15/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_4/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_7/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_10/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_13/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_16/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_2/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_5/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_8/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_11/D delay 1355.81 ps
Path DFFPOSX1_17/CLK to DFFPOSX1_14/D delay 1355.81 ps
Path DFFPOSX1_18/CLK to DFFPOSX1_3/D delay 1344.34 ps
Path DFFPOSX1_18/CLK to DFFPOSX1_6/D delay 1344.34 ps
Path DFFPOSX1_18/CLK to DFFPOSX1_9/D delay 1344.34 ps
Path DFFPOSX1_18/CLK to DFFPOSX1_12/D delay 1344.34 ps
Computed maximum clock frequency (zero slack) = 737.569 MHz
-----------------------------------------

Number of paths analyzed:  1091

Top 20 minimum delay paths:
Path DFFPOSX1_275/CLK to output pin data_out[0] delay 154.551 ps
Path DFFPOSX1_276/CLK to output pin data_out[1] delay 154.551 ps
Path DFFPOSX1_277/CLK to output pin data_out[2] delay 154.551 ps
Path DFFPOSX1_278/CLK to output pin data_out[3] delay 154.551 ps
Path DFFPOSX1_279/CLK to output pin data_out[4] delay 154.551 ps
Path DFFPOSX1_280/CLK to output pin data_out[5] delay 154.551 ps
Path DFFPOSX1_281/CLK to output pin data_out[6] delay 154.551 ps
Path DFFPOSX1_282/CLK to output pin data_out[7] delay 154.551 ps
Path DFFPOSX1_283/CLK to output pin data_out[8] delay 154.551 ps
Path DFFPOSX1_284/CLK to output pin data_out[9] delay 154.551 ps
Path DFFPOSX1_285/CLK to output pin data_out[10] delay 154.551 ps
Path DFFPOSX1_286/CLK to output pin data_out[11] delay 154.551 ps
Path DFFPOSX1_287/CLK to output pin data_out[12] delay 154.551 ps
Path DFFPOSX1_288/CLK to output pin data_out[13] delay 154.551 ps
Path DFFPOSX1_289/CLK to output pin data_out[14] delay 154.551 ps
Path DFFPOSX1_290/CLK to output pin data_out[15] delay 154.551 ps
Path DFFPOSX1_1/CLK to DFFPOSX1_275/D delay 184.707 ps
Path DFFPOSX1_2/CLK to DFFPOSX1_276/D delay 184.707 ps
Path DFFPOSX1_3/CLK to DFFPOSX1_277/D delay 184.707 ps
Path DFFPOSX1_4/CLK to DFFPOSX1_278/D delay 184.707 ps
Design meets minimum hold timing.
-----------------------------------------

Number of paths analyzed:  1540

Top 20 maximum delay paths:
Path input pin wSelec[64] to DFFPOSX1_6/D delay 1735.7 ps
Path input pin wSelec[86] to DFFPOSX1_14/D delay 1735.7 ps
Path input pin wSelec[97] to DFFPOSX1_2/D delay 1735.7 ps
Path input pin wSelec[119] to DFFPOSX1_10/D delay 1735.7 ps
Path input pin wSelec[9] to DFFPOSX1_2/D delay 1735.22 ps
Path input pin wSelec[20] to DFFPOSX1_6/D delay 1735.22 ps
Path input pin wSelec[31] to DFFPOSX1_10/D delay 1735.22 ps
Path input pin wSelec[42] to DFFPOSX1_14/D delay 1735.22 ps
Path input pin wSelec[64] to DFFPOSX1_8/D delay 1734.83 ps
Path input pin wSelec[86] to DFFPOSX1_16/D delay 1734.83 ps
Path input pin wSelec[97] to DFFPOSX1_4/D delay 1734.83 ps
Path input pin wSelec[119] to DFFPOSX1_12/D delay 1734.83 ps
Path input pin wSelec[9] to DFFPOSX1_4/D delay 1734.37 ps
Path input pin wSelec[20] to DFFPOSX1_8/D delay 1734.37 ps
Path input pin wSelec[31] to DFFPOSX1_12/D delay 1734.37 ps
Path input pin wSelec[42] to DFFPOSX1_16/D delay 1734.37 ps
Path input pin wSelec[62] to DFFPOSX1_7/D delay 1730.99 ps
Path input pin wSelec[62] to DFFPOSX1_8/D delay 1730.99 ps
Path input pin wSelec[84] to DFFPOSX1_16/D delay 1730.99 ps
Path input pin wSelec[95] to DFFPOSX1_3/D delay 1730.99 ps
-----------------------------------------

Number of paths analyzed:  1540

Top 20 minimum delay paths:
Path input pin wRegs0[31] to DFFPOSX1_50/D delay 0 ps
Path input pin wRegs0[30] to DFFPOSX1_49/D delay 0 ps
Path input pin wRegs0[29] to DFFPOSX1_48/D delay 0 ps
Path input pin wRegs0[28] to DFFPOSX1_47/D delay 0 ps
Path input pin wRegs0[27] to DFFPOSX1_46/D delay 0 ps
Path input pin wRegs0[26] to DFFPOSX1_45/D delay 0 ps
Path input pin wRegs0[25] to DFFPOSX1_44/D delay 0 ps
Path input pin wRegs0[24] to DFFPOSX1_43/D delay 0 ps
Path input pin wRegs0[23] to DFFPOSX1_42/D delay 0 ps
Path input pin wRegs0[22] to DFFPOSX1_41/D delay 0 ps
Path input pin wRegs0[21] to DFFPOSX1_40/D delay 0 ps
Path input pin wRegs0[20] to DFFPOSX1_39/D delay 0 ps
Path input pin wRegs0[19] to DFFPOSX1_38/D delay 0 ps
Path input pin wRegs0[18] to DFFPOSX1_37/D delay 0 ps
Path input pin wRegs0[17] to DFFPOSX1_36/D delay 0 ps
Path input pin wRegs0[16] to DFFPOSX1_35/D delay 0 ps
Path input pin wRegs0[15] to DFFPOSX1_34/D delay 0 ps
Path input pin wRegs0[14] to DFFPOSX1_33/D delay 0 ps
Path input pin wRegs0[13] to DFFPOSX1_32/D delay 0 ps
Path input pin wRegs0[12] to DFFPOSX1_31/D delay 0 ps
-----------------------------------------

